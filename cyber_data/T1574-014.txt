MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseHijack Execution FlowAppDomainManagerHijack Execution Flow:AppDomainManagerOther sub-techniques of Hijack Execution Flow (13)IDNameT1574.001DLL Search Order HijackingT1574.002DLL Side-LoadingT1574.004Dylib HijackingT1574.005Executable Installer File Permissions WeaknessT1574.006Dynamic Linker HijackingT1574.007Path Interception by PATH Environment VariableT1574.008Path Interception by Search Order HijackingT1574.009Path Interception by Unquoted PathT1574.010Services File Permissions WeaknessT1574.011Services Registry Permissions WeaknessT1574.012COR_PROFILERT1574.013KernelCallbackTableT1574.014AppDomainManagerAdversaries may execute their own malicious payloads by hijacking how the .NETAppDomainManagerloads assemblies. The .NET framework uses theAppDomainManagerclass to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (.exeor.dllbinaries compiled to run as .NET code) may be loaded into an application domain as executable code.[1]Known as "AppDomainManager injection," adversaries may execute arbitrary code by hijacking how .NET applications load assemblies. For example, malware may create a custom application domain inside a target process to load and execute an arbitrary assembly. Alternatively, configuration files (.config) or process environment variables that define .NET runtime settings may be tampered with to instruct otherwise benign .NET applications to load a malicious assembly (identified by name) into the target process.[2][3][4]ID:T1574.014Sub-technique of:T1574ⓘTactics:Persistence,Privilege Escalation,Defense EvasionⓘPlatforms:WindowsContributors:Ivy Drexel; Thomas BVersion:1.0Created:28 March 2024Last Modified:28 April 2024Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1022Restrict File and Directory PermissionsInstall .NET applications and related software in write-protected locations. Set directory access controls to prevent file writes to the search paths for .NET applications, both in the folders where applications are run from and the standard resources folders.DetectionIDData SourceData ComponentDetectsDS0022FileFile CreationMonitor for newly constructed files, especially unknown .NET assemblies and configuration files in user writable folder paths.DS0011ModuleModule LoadMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of .NET assemblies into processes (which may not always create standard image load events).Look for image loads that are not recognized or not normally loaded into a process.[2][4]DS0009ProcessProcess CreationMonitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the loading of unexpected .NET resources.ReferencesMicrosoft. (2021, September 15). Application domains. Retrieved March 28, 2024.Administrator. (2020, May 26). APPDOMAINMANAGER INJECTION AND DETECTION. Retrieved March 28, 2024.PwC Threat Intelligence. (2023, October 25). Yellow Liderc ships its scripts and delivers IMAPLoader malware. Retrieved March 29, 2024.Spagnola, N. (2023, May 5). AppDomain Manager Injection: New Techniques For Red Teams. Retrieved March 29, 2024.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.