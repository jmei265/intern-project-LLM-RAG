MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseProcess InjectionThread Execution HijackingProcess Injection:Thread Execution HijackingOther sub-techniques of Process Injection (12)IDNameT1055.001Dynamic-link Library InjectionT1055.002Portable Executable InjectionT1055.003Thread Execution HijackingT1055.004Asynchronous Procedure CallT1055.005Thread Local StorageT1055.008Ptrace System CallsT1055.009Proc MemoryT1055.011Extra Window Memory InjectionT1055.012Process HollowingT1055.013Process DoppelgängingT1055.014VDSO HijackingT1055.015ListPlantingAdversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such asOpenThread. At this point the process can be suspended then written to, realigned to the injected code, and resumed viaSuspendThread,VirtualAllocEx,WriteProcessMemory,SetThreadContext, thenResumeThreadrespectively.[1]This is very similar toProcess Hollowingbut targets an existing process rather than creating a process in a suspended state.Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process.ID:T1055.003Sub-technique of:T1055ⓘTactics:Defense Evasion,Privilege EscalationⓘPlatforms:WindowsⓘPermissions Required:UserⓘDefense Bypassed:Anti-virus, Application controlVersion:1.1Created:14 January 2020Last Modified:18 October 2021Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0168GazerGazerperforms thread execution hijacking to inject its orchestrator into a running thread from a remote process.[2][3]S0094Trojan.KaraganyTrojan.Karaganycan inject a suspended thread of its own process into a new process and initiate via theResumeThreadAPI.[4]S0579WaterbearWaterbearcan use thread injection to inject shellcode into the process of security software.[5]MitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.DetectionIDData SourceData ComponentDetectsDS0009ProcessOS API ExecutionMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]Process AccessMonitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.Process ModificationMonitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.ReferencesHosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.ESET. (2017, August). Gazing at Gazer: Turla’s new second stage backdoor. Retrieved September 14, 2017.Kaspersky Lab's Global Research & Analysis Team. (2017, August 30). Introducing WhiteBear. Retrieved September 21, 2017.Secureworks. (2019, July 24). Updated Karagany Malware Targets Energy Sector. Retrieved August 12, 2020.Su, V. et al. (2019, December 11). Waterbear Returns, Uses API Hooking to Evade Security. Retrieved February 22, 2021.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.