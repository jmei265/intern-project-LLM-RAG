MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseEvent Triggered ExecutionWindows Management Instrumentation Event SubscriptionEvent Triggered Execution:Windows Management Instrumentation Event SubscriptionOther sub-techniques of Event Triggered Execution (16)IDNameT1546.001Change Default File AssociationT1546.002ScreensaverT1546.003Windows Management Instrumentation Event SubscriptionT1546.004Unix Shell Configuration ModificationT1546.005TrapT1546.006LC_LOAD_DYLIB AdditionT1546.007Netsh Helper DLLT1546.008Accessibility FeaturesT1546.009AppCert DLLsT1546.010AppInit DLLsT1546.011Application ShimmingT1546.012Image File Execution Options InjectionT1546.013PowerShell ProfileT1546.014EmondT1546.015Component Object Model HijackingT1546.016Installer PackagesAdversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.[1]Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.[2][3]Adversaries may also compile WMI scripts – usingmofcomp.exe–into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.[4][5]WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.ID:T1546.003Sub-technique of:T1546ⓘTactics:Privilege Escalation,PersistenceⓘPlatforms:WindowsⓘPermissions Required:Administrator, SYSTEMContributors:Brent Murphy, Elastic; David French, Elastic; Viren Chaudhari, QualysVersion:1.4Created:24 January 2020Last Modified:13 April 2024Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0202adbupdadbupdcan use a WMI script to achieve persistence.[6]G0016APT29APT29has used WMI event subscriptions for persistence.[7]G0064APT33APT33has attempted to use WMI event subscriptions to establish persistence on compromised hosts.[8]S1081BADHATCHBADHATCHcan use WMI event subscriptions for persistence.[9]G0108Blue MockingbirdBlue Mockingbirdhas used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.[10]G0061FIN8FIN8has used WMI event subscriptions for persistence.[11]G1001HEXANEHEXANEhas used WMI event subscriptions for persistence.[12]S0376HOPLIGHTHOPLIGHTcan use WMI event subscriptions to create persistence.[13]S1020KevinKevincan compile randomly-generated MOF files into the WMI repository to persistently run malware.[12]G0065LeviathanLeviathanhas used WMI for persistence.[14]G1013MetadorMetadorhas established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such ascdb.exe.[15]S1059metaMainmetaMainregistered a WMI event subscription consumer called "hard_disk_stat" to establish persistence.[15]G0129Mustang PandaMustang Panda's custom ORat tool uses a WMI event consumer to maintain persistence.[16]C0023Operation GhostDuringOperation Ghost,APT29used WMI event subscriptions to establish persistence for malware.[17]S0378PoshC2PoshC2has the ability to persist on a system using WMI events.[18]S0150POSHSPYPOSHSPYuses a WMI event subscription to establish persistence.[19]S0371POWERTONPOWERTONcan use WMI for persistence.[20]G0075RancorRancorhas complied VBScript-generated MOF files into WMI event subscriptions for persistence.[21]S0511RegDukeRegDukecan persist using a WMI consumer that is launched every time a process named WINWORD.EXE is started.[17]S1085SardonicSardoniccan use a WMI event filter to invoke a command-line event consumer to gain persistence.[22]S0053SeaDukeSeaDukeuses an event filter in WMI code to execute a previously dropped executable shortly after system startup.[3]S0692SILENTTRINITYSILENTTRINITYcan create a WMI Event to execute a payload for persistence.[23]C0024SolarWinds CompromiseDuring theSolarWinds Compromise,APT29used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor withrundll32.exe.[24][25]S0682TrailBlazerTrailBlazerhas the ability to use WMI for persistence.[26]G0010TurlaTurlahas used WMI event filters and consumers to establish persistence.[27]MitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointOn Windows 10, enable Attack Surface Reduction (ASR) rules to prevent malware from abusing WMI to attain persistence.[28]M1026Privileged Account ManagementPrevent credential overlap across systems of administrator and privileged accounts.[3]M1018User Account ManagementBy default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments that can be used to register WMI persistence, such as theRegister-WmiEventPowerShellcmdlet[29]DS0022FileFile CreationMonitor for MOF files outside of theHKLM\SOFTWARE\Microsoft\WBEMfolder, as almost all legitimate MOF files will be stored in the WBEM folder.[30]Adversaries may create modified MOF files to be complied into WMI event subscriptions.DS0009ProcessProcess CreationMonitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).Note: Windows Event ID 4688 (A new process has been created) and Sysmon Event ID 1 (Process creation) can be used to alert on processes created by WMI event subscription triggers by filtering on events with a parent process name ofWmiPrvSe.exe.Monitor for execution of mofcomp.exe as a child of a suspicious shell or script running utility –\powershell.exeor\cmd.exe– or by having a suspicious path in the command line, such as%temp%.[31][32]Adversaries may compile modified MOF files using mofcomp.exe to create malicious WMI event subscriptions.DS0005WMIWMI CreationMonitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[33][34]Monitor for the creation of new WMIEventFilter,EventConsumer, andFilterToConsumerBindingevents. Event ID 5861 is logged on Windows 10 systems when newEventFilterToConsumerBindingevents are created.[35]ReferencesMandiant. (2015, February 24). M-Trends 2015: A View from the Front Lines. Retrieved May 18, 2016.Devon Kerr. (2015). There's Something About WMI. Retrieved May 4, 2020.Ballenthin, W., et al. (2015). Windows Management Instrumentation (WMI) Offense, Defense, and Forensics. Retrieved March 30, 2016.Dell SecureWorks Counter Threat Unit™ (CTU) Research Team. (2016, March 28). A Novel WMI Persistence Implementation. Retrieved March 30, 2016.Satran, M. (2018, May 30). Managed Object Format (MOF). Retrieved January 24, 2020.Windows Defender Advanced Threat Hunting Team. (2016, April 29). PLATINUM: Targeted attacks in South and Southeast Asia. Retrieved February 15, 2018.Dunwoody, M. and Carr, N.. (2016, September 27). No Easy Breach DerbyCon 2016. Retrieved October 4, 2016.Microsoft Threat Protection Intelligence Team. (2020, June 18). Inside Microsoft Threat Protection: Mapping attack chains from cloud to endpoint. Retrieved June 22, 2020.Vrabie, V., et al. (2021, March 10). FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021.Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020.Martin Zugec. (2021, July 27). Deep Dive Into a FIN8 Attack - A Forensic Investigation. Retrieved September 1, 2021.Kayal, A. et al. (2021, October). LYCEUM REBORN: COUNTERINTELLIGENCE IN THE MIDDLE EAST. Retrieved June 14, 2022.US-CERT. (2019, April 10). MAR-10135536-8 – North Korean Trojan: HOPLIGHT. Retrieved April 19, 2019.FireEye. (2018, March 16). Suspected Chinese Cyber Espionage Group (TEMP.Periscope) Targeting U.S. Engineering and Maritime Industries. Retrieved April 11, 2018.Ehrlich, A., et al. (2022, September). THE MYSTERY OF METADOR | AN UNATTRIBUTED THREAT HIDING IN TELCOS, ISPS, AND UNIVERSITIES. Retrieved January 23, 2023.Counter Threat Unit Research Team. (2019, December 29). BRONZE PRESIDENT Targets NGOs. Retrieved April 13, 2021.Faou, M., Tartare, M., Dupuy, T. (2019, October). OPERATION GHOST. Retrieved September 23, 2020.Nettitude. (2018, July 23). Python Server for PoshC2. Retrieved April 23, 2019.Dunwoody, M.. (2017, April 3). Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.Ackerman, G., et al. (2018, December 21). OVERRULED: Containing a Potentially Destructive Adversary. Retrieved January 17, 2019.Jen Miller-Osborn and Mike Harbison. (2019, December 17). Rancor: Cyber Espionage Group Uses New Custom Malware to Attack Southeast Asia. Retrieved February 9, 2024.Budaca, E., et al. (2021, August 25). FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023.Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022.MSTIC, CDOC, 365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021.Microsoft 365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021.CrowdStrike. (2022, January 27). Early Bird Catches the Wormhole: Observations from the StellarParticle Campaign. Retrieved February 7, 2022.Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.Microsoft. (2021, July 2). Use attack surface reduction rules to prevent malware infection. Retrieved June 24, 2021.Microsoft. (n.d.). Retrieved January 24, 2020.Chad Tilbury. (2023, May 22). Finding Evil WMI Event Consumers with Disk Forensics. Retrieved February 9, 2024.detection.fyi. (2023, October 28). Potential Suspicious Mofcomp Execution. Retrieved February 9, 2024.The DFIR Report. (2023, January 8). proc_creation_win_mofcomp_execution.yml. Retrieved February 9, 2024.Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.French, D. (2018, October 9). Detecting & Removing an Attacker’s WMI Persistence. Retrieved October 11, 2019.French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.