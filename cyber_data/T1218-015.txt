MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseSystem Binary Proxy ExecutionElectron ApplicationsSystem Binary Proxy Execution:Electron ApplicationsOther sub-techniques of System Binary Proxy Execution (14)IDNameT1218.001Compiled HTML FileT1218.002Control PanelT1218.003CMSTPT1218.004InstallUtilT1218.005MshtaT1218.007MsiexecT1218.008OdbcconfT1218.009Regsvcs/RegasmT1218.010Regsvr32T1218.011Rundll32T1218.012VerclsidT1218.013MavinjectT1218.014MMCT1218.015Electron ApplicationsAdversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams.[1]Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS.[2]The Chromium engine is used to display web content and Node.js runs the backend code.[3]Due to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework.[3]For example, the abuse ofteams.exeandchrome.exemay allow adversaries to execute malicious commands as child processes of the legitimate application (e.g.,chrome.exe --disable-gpu-sandbox --gpu-launcher="C:\Windows\system32\cmd.exe /c calc.exe).[4]Adversaries may also execute malicious content by planting maliciousJavaScriptwithin Electron applications.[5]ID:T1218.015Sub-technique of:T1218ⓘTactic:Defense EvasionⓘPlatforms:Linux, Windows, macOSContributors:Debabrata SharmaVersion:1.0Created:07 March 2024Last Modified:15 April 2024Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1042Disable or Remove Feature or ProgramRemove or deny access to unnecessary and potentially vulnerable software and features to prevent abuse by adversaries. Many native binaries may not be necessary within a given environment: for example, consider disabling the Node.js integration in all renderers that display remote content to protect users by limiting adversaries’ power to plant malicious JavaScript within Electron applications.[6]M1038Execution PreventionWhere possible, enforce binary and application integrity with digital signature verification to prevent untrusted code from executing. For example, do not useshell.openExternalwith untrusted content.Where possible, setnodeIntegrationto false, which disables access to the Node.js function.[7]By disabling access to the Node.js function, this may limit the ability to execute malicious commands by injecting JavaScript code.Do not disablewebSecurity, which may allow for users of the application to invoke malicious content from online sources.M1050Exploit ProtectionMicrosoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using trusted binaries to bypass application control. Ensure that Electron is updated to the latest version and critical vulnerabilities (such as nodeIntegration bypasses) are patched and cannot be exploited.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments that may abuse Electron apps to execute malicious content. For example, analyze commands invokingteams.exeorchrome.exeto execute malicious or abnormal content.DS0009ProcessProcess CreationMonitor processes and command-line parameters for binaries associated with Electron apps that may be used to proxy execution of malicious content. Compare recent invocations of these binaries with prior history of known good arguments to determine anomalous and potentially adversarial activity.Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.ReferencesTrend Micro. (2023, June 6). Abusing Electronbased applications in targeted attacks. Retrieved March 7, 2024.Alanna Titterington. (2023, September 14). Security of Electron-based desktop applications. Retrieved March 7, 2024.TOM ABAI. (2023, August 10). There’s a New Stealer Variant in Town, and It’s Using Electron to Stay Fully Undetected. Retrieved March 7, 2024.Kosayev, U. (2023, June 15). One Electron to Rule Them All. Retrieved March 7, 2024.ElectronJS.org. (n.d.). Retrieved March 7, 2024.Stack Overflow. (n.d.). Why do I see an "Electron Security Warning" after updating my Electron project to the latest version?. Retrieved March 7, 2024.CertiK. (2020, June 30). Vulnerability in Electron-based Application: Unintentionally Giving Malicious Code Room to Run. Retrieved March 7, 2024.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.