MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseHijack Execution FlowKernelCallbackTableHijack Execution Flow:KernelCallbackTableOther sub-techniques of Hijack Execution Flow (13)IDNameT1574.001DLL Search Order HijackingT1574.002DLL Side-LoadingT1574.004Dylib HijackingT1574.005Executable Installer File Permissions WeaknessT1574.006Dynamic Linker HijackingT1574.007Path Interception by PATH Environment VariableT1574.008Path Interception by Search Order HijackingT1574.009Path Interception by Unquoted PathT1574.010Services File Permissions WeaknessT1574.011Services Registry Permissions WeaknessT1574.012COR_PROFILERT1574.013KernelCallbackTableT1574.014AppDomainManagerAdversaries may abuse theKernelCallbackTableof a process to hijack its execution flow in order to run their own payloads.[1][2]TheKernelCallbackTablecan be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process onceuser32.dllis loaded.[3]An adversary may hijack the execution flow of a process using theKernelCallbackTableby replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such asReflective Code LoadingorProcess Injectioninto another process.A pointer to the memory address of theKernelCallbackTablecan be obtained by locating the PEB (ex: via a call to theNtQueryInformationProcess()Native APIfunction).[4]Once the pointer is located, theKernelCallbackTablecan be duplicated, and a function in the table (e.g.,fnCOPYDATA) set to the address of a malicious payload (ex: viaWriteProcessMemory()). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.[1]The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, theKernelCallbackTablemay also be restored to its original state by the rest of the malicious payload.[1]Use of theKernelCallbackTableto hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.ID:T1574.013Sub-technique of:T1574ⓘTactics:Persistence,Privilege Escalation,Defense EvasionⓘPlatforms:WindowsVersion:1.0Created:25 February 2022Last Modified:22 March 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0182FinFisherFinFisherhas used theKernelCallbackTableto hijack the execution flow of a process by replacing the__fnDWORDfunction with the address of a createdAsynchronous Procedure Callstub routine.[2]G0032Lazarus GroupLazarus Grouphas abused theKernelCallbackTableto hijack process control flow and execute shellcode.[1][5]MitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).DetectionIDData SourceData ComponentDetectsDS0009ProcessOS API ExecutionMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asWriteProcessMemory()andNtQueryInformationProcess()with the parameter set toProcessBasicInformationmay be used for this technique.[1]ReferencesSaini, A. and Hossein, J. (2022, January 27). North Korea’s Lazarus APT leverages Windows Update client, GitHub in latest campaign. Retrieved January 27, 2022.Microsoft Defender Security Research Team. (2018, March 1). FinFisher exposed: A researcher’s tale of defeating traps, tricks, and complex virtual machines. Retrieved January 27, 2022.odzhan. (2019, May 25). Windows Process Injection: KernelCallbackTable used by FinFisher / FinSpy. Retrieved February 4, 2022.Microsoft. (2021, November 23). NtQueryInformationProcess function (winternl.h). Retrieved February 4, 2022.Pradhan, A. (2022, February 8). LolZarus: Lazarus Group Incorporating Lolbins into Campaigns. Retrieved March 22, 2022.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.