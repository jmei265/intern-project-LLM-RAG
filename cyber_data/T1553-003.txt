MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseSubvert Trust ControlsSIP and Trust Provider HijackingSubvert Trust Controls:SIP and Trust Provider HijackingOther sub-techniques of Subvert Trust Controls (6)IDNameT1553.001Gatekeeper BypassT1553.002Code SigningT1553.003SIP and Trust Provider HijackingT1553.004Install Root CertificateT1553.005Mark-of-the-Web BypassT1553.006Code Signing Policy ModificationAdversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode[1]digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,[2]which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.[3]Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)[4]to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all[5]) and are identified by globally unique identifiers (GUIDs).[3]Similar toCode Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by:[3]Modifying theDllandFuncNameRegistry values inHKLM\SOFTWARE[\WOW6432Node]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg{SIP_GUID}that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP[6](although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).Modifying theDllandFuncNameRegistry values inHKLM\SOFTWARE[WOW6432Node]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData{SIP_GUID}that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP[6](with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.Modifying theDLLandFunctionRegistry values inHKLM\SOFTWARE[WOW6432Node]Microsoft\Cryptography\Providers\Trust\FinalPolicy{trust provider GUID}that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).Note:The above hijacks are also possible without modifying the Registry viaDLL Search Order Hijacking.Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation.[3]ID:T1553.003Sub-technique of:T1553ⓘTactic:Defense EvasionⓘPlatforms:WindowsⓘDefense Bypassed:Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature ValidationContributors:Matt Graeber, @mattifestation, SpecterOpsVersion:1.0Created:05 February 2020Last Modified:05 May 2022Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1038Execution PreventionEnable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.M1022Restrict File and Directory PermissionsRestrict storage and execution of SIP DLLs to protected directories, such as C:\Windows, rather than user directories.M1024Restrict Registry PermissionsEnsure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented.DetectionIDData SourceData ComponentDetectsDS0022FileFile ModificationPeriodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3]Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.[3]DS0011ModuleModule LoadEnable CryptoAPI v2 (CAPI) event logging[7]to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).[3]DS0024Windows RegistryWindows Registry Key ModificationEnable the Registry Global Object Access Auditing[8]setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[9]*HKLM\SOFTWARE\Microsoft\Cryptography\OID*HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID*HKLM\SOFTWARE\Microsoft\Cryptography\Providers\Trust*HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\TrustNote:As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process usingRegsvr32.[3]Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3]ReferencesMicrosoft. (n.d.). Authenticode. Retrieved January 31, 2018.Microsoft. (n.d.). WinVerifyTrust function. Retrieved January 31, 2018.Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018.Navarro, E. (2008, July 11). SIP’s (Subject Interface Package) and Authenticode. Retrieved January 31, 2018.Hudek, T. (2017, April 20). Catalog Files and Digital Signatures. Retrieved January 31, 2018.Graeber, M. (2017, September 14). PoCSubjectInterfacePackage. Retrieved January 31, 2018.Entrust Datacard. (2017, August 16). How do I enable CAPI 2.0 logging in Windows Vista, Windows 7 and Windows 2008 Server?. Retrieved January 31, 2018.Microsoft. (2016, August 31). Registry (Global Object Access Auditing). Retrieved January 31, 2018.Microsoft. (2012, July 2). Audit Registry. Retrieved January 31, 2018.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.