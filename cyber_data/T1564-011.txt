MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseHide ArtifactsIgnore Process InterruptsHide Artifacts:Ignore Process InterruptsOther sub-techniques of Hide Artifacts (12)IDNameT1564.001Hidden Files and DirectoriesT1564.002Hidden UsersT1564.003Hidden WindowT1564.004NTFS File AttributesT1564.005Hidden File SystemT1564.006Run Virtual InstanceT1564.007VBA StompingT1564.008Email Hiding RulesT1564.009Resource ForkingT1564.010Process Argument SpoofingT1564.011Ignore Process InterruptsT1564.012File/Path ExclusionsAdversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.[1]These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.Adversaries may invoke processes usingnohup,PowerShell-ErrorAction SilentlyContinue, or similar commands that may be immune to hangups.[2][3]This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.Hiding from process interrupt signals may allow malware to continue execution, but unlikeTrapthis does not establishPersistencesince the process will not be re-invoked once actually terminated.ID:T1564.011Sub-technique of:T1564ⓘTactic:Defense EvasionⓘPlatforms:Linux, Windows, macOSContributors:Viren Chaudhari, QualysVersion:1.0Created:24 August 2023Last Modified:06 November 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0588GoldMaxTheGoldMaxLinux variant has been executed with thenohupcommand to ignore hangup signals and continue to run if the terminal session was terminated.[4]S0402OSX/ShlayerOSX/Shlayerhas used thenohupcommand to instruct executed payloads to ignore hangup signals.[5]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments, such asnohup, that may attempt to hide processes from interrupt signals.DS0009ProcessProcess CreationMonitor newly created processes for artifacts, such asnohuporPowerShell-ErrorAction SilentlyContinue, that may attempt to hide processes from interrupt signals.ReferencesLinux man-pages. (2023, April 3). signal(7). Retrieved August 30, 2023.Meyering, J. (n.d.). nohup(1). Retrieved August 30, 2023.Microsoft. (2023, March 2). $DebugPreference. Retrieved August 30, 2023.CrowdStrike. (2022, January 27). Early Bird Catches the Wormhole: Observations from the StellarParticle Campaign. Retrieved February 7, 2022.Jaron Bradley. (2021, April 26). Shlayer malware abusing Gatekeeper bypass on macOS. Retrieved September 22, 2021.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.