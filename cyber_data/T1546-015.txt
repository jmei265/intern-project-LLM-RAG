MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseEvent Triggered ExecutionComponent Object Model HijackingEvent Triggered Execution:Component Object Model HijackingOther sub-techniques of Event Triggered Execution (16)IDNameT1546.001Change Default File AssociationT1546.002ScreensaverT1546.003Windows Management Instrumentation Event SubscriptionT1546.004Unix Shell Configuration ModificationT1546.005TrapT1546.006LC_LOAD_DYLIB AdditionT1546.007Netsh Helper DLLT1546.008Accessibility FeaturesT1546.009AppCert DLLsT1546.010AppInit DLLsT1546.011Application ShimmingT1546.012Image File Execution Options InjectionT1546.013PowerShell ProfileT1546.014EmondT1546.015Component Object Model HijackingT1546.016Installer PackagesAdversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.[1]References to various COM objects are stored in the Registry.Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.[2]An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.ID:T1546.015Sub-technique of:T1546ⓘTactics:Privilege Escalation,PersistenceⓘPlatforms:WindowsⓘPermissions Required:UserContributors:ElasticVersion:1.1Created:16 March 2020Last Modified:21 April 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0045ADVSTORESHELLSome variants ofADVSTORESHELLachieve persistence by registering the payload as a Shell Icon Overlay handler COM object.[3]G0007APT28APT28has used COM hijacking for persistence by replacing the legitimateMMDeviceEnumeratorobject with a payload.[4][5]S0127BBSRATBBSRAThas been seen persisting via COM hijacking through replacement of the COM object for MruPidlList{42aedc87-2188-41fd-b9a3-0c966feabec1}or Microsoft WBEM New Event Subsystem{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}depending on the system's CPU architecture.[6]S0126ComRATComRATsamples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry locationHKCU\Software\Classes\CLSID{42aedc87-2188-41fd-b9a3-0c966feabec1}\InprocServer32.[7]S0679FerociousFerociouscan use COM hijacking to establish persistence.[8]S0044JHUHUGITJHUHUGIThas used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A}).[4][9]S0356KONNIKONNIhas modified ComSysApp service to load the malicious DLL payload.[10]S0256MosquitoMosquitouses COM hijacking as a method of persistence.[11]S1050PcSharePcSharehas created theHKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32Registry key for persistence.[12]S0692SILENTTRINITYSILENTTRINITYcan add a CLSID key for payload execution throughRegistry.CurrentUser.CreateSubKey("Software\\Classes\\CLSID\\{" + clsid + "}\\InProcServer32").[13]S1064SVCReadySVCReadyhas created theHKEY_CURRENT_USER\Software\Classes\CLSID\{E6D34FFC-AD32-4d6a-934C-D387FA873A19}Registry key for persistence.[14]S0670WarzoneRATWarzoneRATcan perform COM hijacking by setting the path to itself to theHKCU\Software\Classes\Folder\shell\open\commandkey with aDelegateExecuteparameter.[15]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on changes to COM registry keys, including HKCU\Software\Classes\CLSID*.DS0011ModuleModule LoadLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.DS0009ProcessProcess CreationMonitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.DS0024Windows RegistryWindows Registry Key ModificationThere are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex:Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\Software\Classes\CLSID\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID.[16]Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.Analytic 1 - Component Object Model Hijackingsource="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode IN (12, 13, 14) TargetObject= "\Software\Classes\CLSID*"ReferencesMicrosoft. (n.d.). The Component Object Model. Retrieved August 18, 2016.G DATA. (2014, October). COM Object hijacking: the discreet way of persistence. Retrieved August 13, 2016.ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.ESET. (2016, October). En Route with Sednit - Part 1: Approaching the Target. Retrieved November 8, 2016.ESET Research. (2019, May 22). A journey to Zebrocy land. Retrieved June 20, 2019.Lee, B. Grunzweig, J. (2015, December 22). BBSRAT Attacks Targeting Russian Organizations Linked to Roaming Tiger. Retrieved August 19, 2016.Rascagneres, P. (2015, May). Tools used by the Uroburos actors. Retrieved August 18, 2016.Yamout, M. (2021, November 29). WIRTE’s campaign in the Middle East ‘living off the land’ since at least 2019. Retrieved February 1, 2022.Mercer, W., et al. (2017, October 22). "Cyber Conflict" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018.Karmi, D. (2020, January 4). A Look Into Konni 2019 Campaign. Retrieved April 28, 2020.ESET, et al. (2018, January). Diplomats in Eastern Europe bitten by a Turla mosquito. Retrieved July 3, 2018.Vrabie, V. (2020, November). Dissecting a Chinese APT Targeting South Eastern Asian Government Institutions. Retrieved September 19, 2022.Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022.Schlapfer, Patrick. (2022, June 6). A New Loader Gets Ready. Retrieved December 13, 2022.Harakhavik, Y. (2020, February 3). Warzone: Behind the enemy lines. Retrieved December 17, 2021.Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.