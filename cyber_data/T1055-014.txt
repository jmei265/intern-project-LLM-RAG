MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseProcess InjectionVDSO HijackingProcess Injection:VDSO HijackingOther sub-techniques of Process Injection (12)IDNameT1055.001Dynamic-link Library InjectionT1055.002Portable Executable InjectionT1055.003Thread Execution HijackingT1055.004Asynchronous Procedure CallT1055.005Thread Local StorageT1055.008Ptrace System CallsT1055.009Proc MemoryT1055.011Extra Window Memory InjectionT1055.012Process HollowingT1055.013Process DoppelgängingT1055.014VDSO HijackingT1055.015ListPlantingAdversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process viaPtrace System Calls. However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).[1][2][3][4]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.ID:T1055.014Sub-technique of:T1055ⓘTactics:Defense Evasion,Privilege EscalationⓘPlatforms:LinuxⓘDefense Bypassed:Anti-virus, Application controlVersion:1.1Created:14 January 2020Last Modified:07 July 2022Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.DetectionIDData SourceData ComponentDetectsDS0011ModuleModule LoadMonitor library load events, especially unusual creation of these binary files followed by loading into processes. Look for libraries that are not recognized or not normally loaded into a process.DS0009ProcessOS API ExecutionMonitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[5][6][7][8]ReferencesO'Neill, R. (2009, May). Modern Day ELF Runtime infection via GOT poisoning. Retrieved March 15, 2020.backtrace. (2016, April 22). ELF SHARED LIBRARY INJECTION FORENSICS. Retrieved June 15, 2020.Petersson, J. (2005, August 14). What is linux-gate.so.1?. Retrieved June 16, 2020.Drysdale, D. (2014, July 16). Anatomy of a system call, part 2. Retrieved June 16, 2020.Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017.GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017.Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017.stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.