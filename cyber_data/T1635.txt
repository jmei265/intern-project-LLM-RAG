MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesMobileSteal Application Access TokenSteal Application Access TokenSub-techniques (1)IDNameT1635.001URI HijackingAdversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering or URI hijacking and typically requires user action to grant access, such as through a system "Open With" dialogue.Application access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).[1]OAuth is one commonly implemented framework used to issue tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry through OAuth 2.0 using a variety of authorization protocols. An example of a commonly-used sequence is Microsoft's Authorization Code Grant flow.[2][3]An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested without requiring user credentials.ID:T1635Sub-techniques:T1635.001Tactic Type:Post-Adversary Device AccessⓘTactic:Credential AccessⓘPlatforms:Android, iOSVersion:1.2Created:01 April 2022Last Modified:26 December 2023Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1013Application Developer GuidanceDevelopers should use Android App Links[4]and iOS Universal Links[5]to provide a secure binding between URIs and applications, preventing malicious applications from intercepting redirections. Additionally, for OAuth use cases, PKCE[6]should be used to prevent use of stolen authorization codes.M1006Use Recent OS VersioniOS 11 introduced a first-come-first-served principle for URIs, allowing only the prior installed app to be launched via the URI.[7]Android 6 introduced App Links.M1011User GuidanceUsers should be instructed to not open links in applications they don’t recognize.DetectionIDData SourceData ComponentDetectsDS0041Application VettingAPI CallsWhen vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice.[8][9]DS0042User InterfaceSystem NotificationsOn Android, users may be presented with a popup to select the appropriate application to open a URI in. If the user sees an application they do not recognize, they can remove it.ReferencesAuth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.Microsoft. (n.d.). Retrieved September 12, 2019.Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.Google. (n.d.). Verify Android App Links. Retrieved September 11, 2020.Apple. (n.d.). Universal Links for Developers. Retrieved September 11, 2020.N. Sakimura, J. Bradley, and N. Agarwal. (2015, September). IETF RFC 7636: Proof Key for Code Exchange by OAuth Public Clients. Retrieved December 21, 2016.L. Wu, Y. Zhou, M. Li. (2019, July 12).  iOS URL Scheme Susceptible to Hijacking. Retrieved September 11, 2020.W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018.Android. (n.d.). Handling App Links. Retrieved December 21, 2016.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.