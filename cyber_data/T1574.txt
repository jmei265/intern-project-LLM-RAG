MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseHijack Execution FlowHijack Execution FlowSub-techniques (13)IDNameT1574.001DLL Search Order HijackingT1574.002DLL Side-LoadingT1574.004Dylib HijackingT1574.005Executable Installer File Permissions WeaknessT1574.006Dynamic Linker HijackingT1574.007Path Interception by PATH Environment VariableT1574.008Path Interception by Search Order HijackingT1574.009Path Interception by Unquoted PathT1574.010Services File Permissions WeaknessT1574.011Services Registry Permissions WeaknessT1574.012COR_PROFILERT1574.013KernelCallbackTableT1574.014AppDomainManagerAdversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.There are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.ID:T1574Sub-techniques:T1574.001,T1574.002,T1574.004,T1574.005,T1574.006,T1574.007,T1574.008,T1574.009,T1574.010,T1574.011,T1574.012,T1574.013,T1574.014ⓘTactics:Persistence,Privilege Escalation,Defense EvasionⓘPlatforms:Linux, Windows, macOSⓘDefense Bypassed:Anti-virus, Application ControlVersion:1.2Created:12 March 2020Last Modified:21 November 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionC0017C0017DuringC0017,APT41established persistence by loading malicious libraries via modifications to the Import Address Table (IAT) within legitimate Microsoft binaries.[1]S1105COATHANGERCOATHANGERwill remove and write malicious shared objects associated with legitimate system functions such asread(2).[2]S1111DarkGateDarkGateedits the Registry keyHKCU\Software\Classes\mscfile\shell\open\commandto execute a malicious AutoIt script.[3]When eventvwr.exe is executed, this will call the Microsoft Management Console (mmc.exe), which in turn references the modified Registry key.S0354DenisDenisreplaces the nonexistent Windows DLL "msfte.dll" with its own malicious version, which is loaded by the SearchIndexer.exe and SearchProtocolHost.exe.[4]S0567DtrackOne ofDtrackcan replace the normal flow of a program execution with malicious code.[5]S0444ShimRatShimRatcan hijack the cryptbase.dll within migwiz.exe to escalate privileges and bypass UAC controls.[6]MitigationsIDMitigationDescriptionM1013Application Developer GuidanceWhen possible, include hash values in manifest files to help prevent side-loading of malicious libraries.[7]M1047AuditUse auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.[8]Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.[9][10][11]M1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).M1038Execution PreventionAdversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.M1022Restrict File and Directory PermissionsInstall software in write-protected locations. Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard library folders.M1044Restrict Library LoadingDisallow loading of remote DLLs. This is included by default in Windows Server 2012+ and is available by patch for XP+ and Server 2003+.Enable Safe DLL Search Mode to force search for system DLLs in directories with greater restrictions (e.g.%SYSTEMROOT%)to be used before local directory DLLs (e.g. a user's home directory)The Safe DLL Search Mode can be enabled via Group Policy at Computer Configuration > [Policies] > Administrative Templates > MSS (Legacy): MSS: (SafeDllSearchMode) Enable Safe DLL search mode. The associated Windows Registry key for this is located atHKLM\SYSTEM\CurrentControlSet\Control\Session Manager\SafeDLLSearchMode[12][13]M1024Restrict Registry PermissionsEnsure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.M1051Update SoftwareUpdate software regularly to include patches that fix DLL side-loading vulnerabilities.M1052User Account ControlTurn off UAC's privilege elevation for standard users[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]to automatically deny elevation requests, add:"ConsentPromptBehaviorUser"=dword:00000000. Consider enabling installer detection for all users by adding:"EnableInstallerDetection"=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add:"EnableInstallerDetection"=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.[14]M1018User Account ManagementLimit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directoryC:and system directories, such asC:\Windows\, to reduce places where malicious files could be placed for execution.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.DS0022FileFile CreationMonitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.File ModificationMonitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.DS0011ModuleModule LoadMonitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.DS0009ProcessProcess CreationMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.DS0019ServiceService MetadataLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.DS0024Windows RegistryWindows Registry Key ModificationMonitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs.ReferencesRufus Brown, Van Ta, Douglas Bienstock, Geoff Ackerman, John Wolfram. (2022, March 8). Does This Look Infected? A Summary of APT41 Targeting U.S. State Governments. Retrieved July 8, 2022.Dutch Military Intelligence and Security Service (MIVD) & Dutch General Intelligence and Security Service (AIVD). (2024, February 6). Ministry of Defense of the Netherlands uncovers COATHANGER, a stealthy Chinese FortiGate RAT. Retrieved February 7, 2024.Adi Zeligson & Rotem Kerner. (2018, November 13). Enter The DarkGate - New Cryptocurrency Mining and Ransomware Campaign. Retrieved February 9, 2024.Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018.Hod Gavriel. (2019, November 21). Dtrack: In-depth analysis of APT on a nuclear power plant. Retrieved January 20, 2021.Yonathan Klijnsma. (2016, May 17). Mofang: A politically motivated information stealing adversary. Retrieved May 12, 2020.Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.PowerSploit. (n.d.). Retrieved December 4, 2014.Microsoft. (n.d.). CreateProcess function. Retrieved December 5, 2014.Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved July 25, 2016.Kanthak, S.. (2016, July 20). Vulnerability and Exploit Detector. Retrieved February 3, 2017.Microsoft. (2010, August 12). More information about the DLL Preloading remote attack vector. Retrieved December 5, 2014.Microsoft. (2018, May 31). Dynamic-Link Library Search Order. Retrieved November 30, 2014.Stefan Kanthak. (2015, December 8). Executable installers are vulnerable^WEVIL (case 7): 7z*.exe allows remote code execution with escalation of privilege. Retrieved December 4, 2014.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.