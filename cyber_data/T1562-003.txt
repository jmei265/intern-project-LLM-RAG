MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseImpair DefensesImpair Command History LoggingImpair Defenses:Impair Command History LoggingOther sub-techniques of Impair Defenses (11)IDNameT1562.001Disable or Modify ToolsT1562.002Disable Windows Event LoggingT1562.003Impair Command History LoggingT1562.004Disable or Modify System FirewallT1562.006Indicator BlockingT1562.007Disable or Modify Cloud FirewallT1562.008Disable or Modify Cloud LogsT1562.009Safe Mode BootT1562.010Downgrade AttackT1562.011Spoof Security AlertingT1562.012Disable or Modify Linux Audit SystemAdversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.On Linux and macOS, command history is tracked in a file pointed to by the environment variableHISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called~/.bash_history. TheHISTCONTROLenvironment variable keeps track of what should be saved by thehistorycommand and eventually into the~/.bash_historyfile when a user logs out.HISTCONTROLdoes not exist by default on macOS, but can be set by the user and will be respected.Adversaries may clear the history environment variable (unset HISTFILE) or set the command history size to zero (export HISTFILESIZE=0) to prevent logging of commands. Additionally,HISTCONTROLcan be configured to ignore commands that start with a space by simply setting it to "ignorespace".HISTCONTROLcan also be set to ignore duplicate commands by setting it to "ignoredups". In some Linux systems, this is set by default to "ignoreboth" which covers both of the previous examples. This means that " ls" will not be saved, but "ls" would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands.On Windows systems, thePSReadLinemodule tracks commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txtby default). Adversaries may change where these logs are saved usingSet-PSReadLineOption -HistorySavePath {File Path}. This will causeConsoleHost_history.txtto stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell commandSet-PSReadlineOption -HistorySaveStyle SaveNothing.[1][2][3]Adversaries may also leverage aNetwork Device CLIon network devices to disable historical command logging (e.g.no logging).ID:T1562.003Sub-technique of:T1562ⓘTactic:Defense EvasionⓘPlatforms:Linux, Network, Windows, macOSⓘDefense Bypassed:Host forensic analysis, Log analysisContributors:Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, SophosVersion:2.2Created:21 February 2020Last Modified:30 March 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionG0082APT38APT38has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.[4]S0692SILENTTRINITYSILENTTRINITYcan bypass ScriptBlock logging to execute unmanaged PowerShell code from memory.[5]MitigationsIDMitigationDescriptionM1039Environment Variable PermissionsPrevent users from changing theHISTCONTROL,HISTFILE, andHISTFILESIZEenvironment variables.[6]M1028Operating System ConfigurationMake sure that theHISTCONTROLenvironment variable is set to "ignoredups" instead of "ignoreboth" or "ignorespace".DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionCorrelating a user session with a distinct lack of new commands in their.bash_historycan be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with-HistorySaveStyle SaveNothingcommand-line arguments and use of the PowerShell commandsSet-PSReadlineOption -HistorySaveStyle SaveNothingandSet-PSReadLineOption -HistorySavePath {File Path}. For network devices, monitor for missing or inconsistencies in Network Device CLI logging present in AAA logs as well as in specific RADIUS and TACAS+ logs.DS0013Sensor HealthHost StatusUsers checking or changing theirHISTCONTROL,HISTFILE, orHISTFILESIZEenvironment variables may be suspicious.ReferencesMicrosoft. (2020, May 13). About History. Retrieved September 4, 2020.jak. (2020, June 27). Live Discover - PowerShell command audit. Retrieved August 21, 2020.Vikas, S. (2020, August 26). PowerShell Command History Forensics. Retrieved September 4, 2020.DHS/CISA. (2020, August 26). FASTCash 2.0: North Korea's BeagleBoyz Robbing Banks. Retrieved September 29, 2021.Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022.Mathew Branwell. (2012, March 21). Securing .bash_history file. Retrieved July 8, 2017.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.