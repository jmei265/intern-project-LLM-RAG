MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseRemote ServicesDistributed Component Object ModelRemote Services:Distributed Component Object ModelOther sub-techniques of Remote Services (8)IDNameT1021.001Remote Desktop ProtocolT1021.002SMB/Windows Admin SharesT1021.003Distributed Component Object ModelT1021.004SSHT1021.005VNCT1021.006Windows Remote ManagementT1021.007Cloud ServicesT1021.008Direct Cloud VM ConnectionsAdversaries may useValid Accountsto interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.[1][2]Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.[3]By default, only Administrators may remotely activate and launch COM objects through DCOM.[4]Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications[5]as well as other Windows objects that contain insecure methods.[6][7]DCOM can also execute macros in existing documents[8]and may also invokeDynamic Data Exchange(DDE) execution directly through a COM created instance of a Microsoft Office application[9], bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting withWindows Management Instrumentation.[10]ID:T1021.003Sub-technique of:T1021ⓘTactic:Lateral MovementⓘPlatforms:WindowsVersion:1.3Created:11 February 2020Last Modified:11 August 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0154Cobalt StrikeCobalt Strikecan deliver Beacon payloads for lateral movement by leveraging remote COM execution.[11]S0363EmpireEmpirecan utilizeInvoke-DCOMto leverage remote COM execution for lateral movement.[12]S0692SILENTTRINITYSILENTTRINITYcan useSystemnamespace methods to execute lateral movement using DCOM.[13]MitigationsIDMitigationDescriptionM1048Application Isolation and SandboxingEnsure all COM alerts and Protected View are enabled.[14]M1042Disable or Remove Feature or ProgramConsider disabling DCOM through Dcomcnfg.exe.[15]M1030Network SegmentationEnable Windows firewall, which prevents DCOM instantiation by default.M1026Privileged Account ManagementModify Registry settings (directly or using Dcomcnfg.exe) inHKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}associated with the process-wide security of individual COM applications.[3]Modify Registry settings (directly or using Dcomcnfg.exe) inHKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Oleassociated with system-wide security defaults for all COM applications that do not set their own process-wide security.[16][4]DetectionIDData SourceData ComponentDetectsDS0011ModuleModule LoadMonitor for COM objects loading DLLs and other modules not typically associated with the application.[5]Note: Sysmon Event ID 7 (Image loaded) can be used to monitor for suspicious DLLs loaded by the DCOM Server Process Launcher which runs inside of svchost.exe. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign svchost.exe module loads that occur as part of its typical operation.DS0029Network TrafficNetwork Connection CreationMonitor for newly constructed network connections that may useValid Accountsto interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.DS0009ProcessProcess CreationMonitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also precede malicious use.[1][6]The Microsoft Management Console (mmc.exe) can be by used by threat actors used to spawn arbitrary processes through DCOM. The typical process tree for this method looks like: svchost.exe —> mmc.exe —>.exe.Accordingly, look for process creation events of mmc.exe in conjunction with the -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.Similar to the Microsoft Management Console, Excel can also be used to execute processes through DCOM. In this case, the typical process tree looks like: svchost.exe —> excel.exe —>.exe.Look for process creation events of excel.exe in conjunction with the /automation -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.ReferencesHamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.Microsoft. (n.d.). Component Object Model (COM). Retrieved November 22, 2017.Microsoft. (n.d.). Setting Process-Wide Security Through the Registry. Retrieved November 21, 2017.Microsoft. (n.d.). DCOM Security Enhancements in Windows XP Service Pack 2 and Windows Server 2003 Service Pack 1. Retrieved November 22, 2017.Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017.Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017.Nelson, M. (2017, January 23). Lateral Movement via DCOM: Round 2. Retrieved November 21, 2017.Nelson, M. (2017, September 11). Lateral Movement using Excel.Application and DCOM. Retrieved November 21, 2017.Tsukerman, P. (2017, November 8). Leveraging Excel DDE for lateral movement via DCOM. Retrieved November 21, 2017.Microsoft. (n.d.). Windows Management Instrumentation. Retrieved April 27, 2016.Mudge, R. (2017, January 24). Scripting Matt Nelson’s MMC20.Application Lateral Movement Technique. Retrieved November 21, 2017.Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016.Salvati, M. (2019, August 6). SILENTTRINITY Modules. Retrieved March 24, 2022.Microsoft. (n.d.). What is Protected View?. Retrieved November 22, 2017.Microsoft. (n.d.). Enable or Disable DCOM. Retrieved November 22, 2017.Microsoft. (n.d.). Registry Values for System-Wide Security. Retrieved November 21, 2017.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.