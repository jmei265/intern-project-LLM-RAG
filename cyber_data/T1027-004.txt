MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseObfuscated Files or InformationCompile After DeliveryObfuscated Files or Information:Compile After DeliveryOther sub-techniques of Obfuscated Files or Information (13)IDNameT1027.001Binary PaddingT1027.002Software PackingT1027.003SteganographyT1027.004Compile After DeliveryT1027.005Indicator Removal from ToolsT1027.006HTML SmugglingT1027.007Dynamic API ResolutionT1027.008Stripped PayloadsT1027.009Embedded PayloadsT1027.010Command ObfuscationT1027.011Fileless StorageT1027.012LNK Icon SmugglingT1027.013Encrypted/Encoded FileAdversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.[1]Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as aPhishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.[2]ID:T1027.004Sub-technique of:T1027ⓘTactic:Defense EvasionⓘPlatforms:Linux, Windows, macOSⓘSystem Requirements:Compiler software (either native to the system or delivered by the adversary)ⓘPermissions Required:UserⓘDefense Bypassed:Anti-virus, Binary Analysis, Host intrusion prevention systems, Signature-based detection, Static File AnalysisContributors:Praetorian; Ye Yint Min Thu Htut, Offensive Security Team, DBS BankVersion:1.0Created:16 March 2020Last Modified:29 March 2020Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0348Cardinal RATCardinal RATand its watchdog component are compiled and executed after being delivered to victims as embedded, uncompiled source code.[3]S0673DarkWatchmanDarkWatchmanhas used thecsc.exetool to compile a C# executable.[4]S0661FoggyWebFoggyWebcan compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.[5]G0047Gamaredon GroupGamaredon Grouphas compiled the source code for a downloader directly on the infected system using the built-inMicrosoft.CSharp.CSharpCodeProviderclass.[6]G0069MuddyWaterMuddyWaterhas used the .NET csc.exe tool to compile executables from downloaded C# code.[1]S0385njRATnjRAThas used AutoIt to compile the payload and main script into a single executable after delivery.[7]G0106RockeRockehas compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).[8]S1099SamuraiSamuraican compile and execute downloaded modules at runtime.[9]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.DS0022FileFile CreationMonitor for newly constructed files for payloadsFile MetadataMonitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc.DS0009ProcessProcess CreationMonitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.ReferencesClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018.Trend Micro. (2019, February 11). Windows App Runs on Mac, Downloads Info Stealer and Adware. Retrieved April 25, 2019.Grunzweig, J.. (2017, April 20). Cardinal RAT Active for Over Two Years. Retrieved December 8, 2018.Smith, S., Stafford, M. (2021, December 14). DarkWatchman: A new evolution in fileless techniques. Retrieved January 10, 2022.Ramin Nafisi. (2021, September 27). FoggyWeb: Targeted NOBELIUM malware leads to persistent backdoor. Retrieved October 4, 2021.Boutin, J. (2020, June 11). Gamaredon group grows its game. Retrieved June 16, 2020.Pascual, C. (2018, November 27). AutoIt-Compiled Worm Affecting Removable Media Delivers Fileless Version of BLADABINDI/njRAT Backdoor. Retrieved June 4, 2019.Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.Dedola, G. (2022, June 21). APT ToddyCat. Retrieved January 3, 2024.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.