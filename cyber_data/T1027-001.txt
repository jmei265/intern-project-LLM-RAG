MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseObfuscated Files or InformationBinary PaddingObfuscated Files or Information:Binary PaddingOther sub-techniques of Obfuscated Files or Information (13)IDNameT1027.001Binary PaddingT1027.002Software PackingT1027.003SteganographyT1027.004Compile After DeliveryT1027.005Indicator Removal from ToolsT1027.006HTML SmugglingT1027.007Dynamic API ResolutionT1027.008Stripped PayloadsT1027.009Embedded PayloadsT1027.010Command ObfuscationT1027.011Fileless StorageT1027.012LNK Icon SmugglingT1027.013Encrypted/Encoded FileAdversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.[1]The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.[2]Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.[3]ID:T1027.001Sub-technique of:T1027ⓘTactic:Defense EvasionⓘPlatforms:Linux, Windows, macOSⓘDefense Bypassed:Anti-virus, Signature-based detectionContributors:Martin Jirkal, ESETVersion:1.2Created:05 February 2020Last Modified:30 March 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionG0016APT29APT29used large size files to avoid detection by security solutions with hardcoded size limits.[4]G0050APT32APT32includes garbage code to mislead anti-malware software and researchers.[1][5]S0268BisonalBisonalhas appended random binary data to the end of itself to generate a large binary.[6]S1070Black BastaBlack Bastahad added data prior to the Portable Executable (PE) header to prevent automatic scanners from identifying the payload.[7]G0060BRONZE BUTLERBRONZE BUTLERdownloader code has included "0" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.[8][9]S0244ComnieComnieappends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.[10]S0137CORESHELLCORESHELLcontains unused machine instructions in a likely attempt to hinder analysis.[11]S0614CostaBricksCostaBrickshas added the entire unobfuscated code of the legitimate open source application Blink to its code.[12]G1003Ember BearEmber Bearhas added extra spaces between JavaScript code characters to increase the overall file size.[13]S0082EmissaryA variant ofEmissaryappends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.[14]S0512FatDukeFatDukehas been packed with junk code and strings.[15]G0046FIN7FIN7has used random junk code to obfuscate malware code.[16]S0182FinFisherFinFishercontains junk code in its functions in an effort to confuse disassembly programs.[17][18]G0047Gamaredon GroupGamaredon Grouphas obfuscated .NET executables by inserting junk code.[19]S0666GelsemiumGelsemiumcan use junk code to hide functions and evade detection.[20]S0477GoopyGoopyhas had null characters padded in its malicious DLL payload.[21]S0531GrandoreiroGrandoreirohas added BMP images to the resources section of its Portable Executable (PE) file increasing each binary to at least 300MB in size.[22]S0632GrimAgentGrimAgenthas the ability to add bytes to change the file hash.[23]G0126HigaisaHigaisaperformed padding with null bytes before calculating its hash.[24]S0528JavaliJavalican use large obfuscated libraries to hinder detection and analysis.[25]S0236KwampirsBefore writing to disk,Kwampirsinserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.[26]G0065LeviathanLeviathanhas inserted garbage characters into code, presumably to avoid anti-virus detection.[27]S0449MazeMazehas inserted large blocks of junk code, including some components to decrypt strings and other important information for later in the encryption process.[28]G0002MoafeeMoafeehas been known to employ binary padding.[29]G0129Mustang PandaMustang Pandahas used junk code within their DLL files to hinder analysis.[30]G0040PatchworkPatchworkapparently alteredNDiskMonitorsamples by adding four bytes of random letters in a likely attempt to change the file hashes.[31]S0223POWERSTATSPOWERSTATShas used useless code blocks to counter analysis.[32]S0650QakBotQakBotcan use large file sizes to evade detection.[33][34]S0433RifdoorRifdoorhas added four additional bytes of data upon launching, then saved the changed version asC:\ProgramData\Initech\Initech.exe.[35]S0370SamSamSamSamhas used garbage code to pad some of its malware components.[36]S1086Snip3Snip3can obfuscate strings using junk Chinese characters.[37]S0586TAINTEDSCRIBETAINTEDSCRIBEcan executeFileRecvWriteRandto append random bytes to the end of a file received from C2.[38]S0612WastedLockerWastedLockercontains junk code to increase its entropy and hide the actual code.[39]S0117XTunnelA version ofXTunnelintroduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.[40]S0248ytyytycontains junk code in its binary, likely to confuse malware analysts.[41]S0230ZeroTZeroThas obfuscated DLLs and functions using dummy API calls inserted between real instructions.[42]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0022FileFile MetadataDepending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.ReferencesFoltýn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018.Ishimaru, S.. (2017, April 13). Old Malware Tricks To Bypass Detection in the Age of Big Data. Retrieved May 30, 2019.VirusTotal. (n.d.). VirusTotal FAQ. Retrieved May 23, 2019.Guerrero-Saade, J. (2021, June 1). NobleBaron | New Poisoned Installers Could Be Used In Supply Chain Attacks. Retrieved August 4, 2021.Dumont, R. (2019, March 20). Fake or Fake: Keeping up with OceanLotus decoys. Retrieved April 1, 2019.Mercer, W., et al. (2020, March 5). Bisonal: 10 years of play. Retrieved January 26, 2022.Check Point. (2022, October 20). BLACK BASTA AND THE UNNOTICED DELIVERY. Retrieved March 8, 2023.Counter Threat Unit Research Team. (2017, October 12). BRONZE BUTLER Targets Japanese Enterprises. Retrieved January 4, 2018.Chen, J. et al. (2019, November). Operation ENDTRADE: TICK’s Multi-Stage Backdoors for Attacking Industries and Stealing Classified Data. Retrieved June 9, 2020.Grunzweig, J. (2018, January 31). Comnie Continues to Target Organizations in East Asia. Retrieved June 7, 2018.FireEye. (2015). APT28: A WINDOW INTO RUSSIA’S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015.The BlackBerry Research and Intelligence Team. (2020, November 12). The CostaRicto Campaign: Cyber-Espionage Outsourced. Retrieved May 24, 2021.Unit 42. (2022, February 25). Spear Phishing Attacks Target Organizations in Ukraine, Payloads Include the Document Stealer OutSteel and the Downloader SaintBot. Retrieved June 9, 2022.Falcone, R. and Miller-Osborn, J. (2016, February 3). Emissary Trojan Changelog: Did Operation Lotus Blossom Cause It to Evolve?. Retrieved February 15, 2016.Faou, M., Tartare, M., Dupuy, T. (2019, October). OPERATION GHOST. Retrieved September 23, 2020.Abdo, B., et al. (2022, April 4). FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7. Retrieved April 5, 2022.FinFisher. (n.d.). Retrieved December 20, 2017.Allievi, A.,Flori, E. (2018, March 01). FinFisher exposed: A researcher’s tale of defeating traps, tricks, and complex virtual machines. Retrieved July 9, 2018.Boutin, J. (2020, June 11). Gamaredon group grows its game. Retrieved June 16, 2020.Dupuy, T. and Faou, M. (2021, June). Gelsemium. Retrieved November 30, 2021.Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018.ESET. (2020, April 28). Grandoreiro: How engorged can an EXE get?. Retrieved November 13, 2020.Priego, A. (2021, July). THE BROTHERS GRIM: THE REVERSING TALE OF GRIMAGENT MALWARE USED BY RYUK. Retrieved July 16, 2021.Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021.GReAT. (2020, July 14). The Tetrade: Brazilian banking malware goes global. Retrieved November 9, 2020.Symantec Security Response Attack Investigation Team. (2018, April 23). New Orangeworm attack group targets the healthcare sector in the U.S., Europe, and Asia. Retrieved May 8, 2018.Axel F, Pierre T. (2017, October 16). Leviathan: Espionage actor spearphishes maritime and defense targets. Retrieved February 15, 2018.Mundo, A. (2020, March 26). Ransomware Maze. Retrieved May 18, 2020.Haq, T., Moran, N., Scott, M., & Vashisht, S. O. (2014, September 10). The Path to Mass-Producing Cyber Attacks [Blog]. Retrieved November 12, 2014.Hamzeloofard, S. (2020, January 31). New wave of PlugX targets Hong Kong | Avira Blog. Retrieved April 13, 2021.Lunghi, D., et al. (2017, December). Untangling the Patchwork Cyberespionage Group. Retrieved July 10, 2018.Lunghi, D. and Horejsi, J.. (2019, June 10). MuddyWater Resurfaces, Uses Multi-Stage Backdoor POWERSTATS V3 and New Post-Exploitation Tools. Retrieved May 14, 2020.Mendoza, E. et al. (2020, May 25). Qakbot Resurges, Spreads through VBS Files. Retrieved September 27, 2021.Group IB. (2020, September). LOCK LIKE  A PRO. Retrieved September 27, 2021.Knight, S.. (2020, April 16). VMware Carbon Black TAU Threat Analysis: The Evolution of Lazarus. Retrieved May 1, 2020.Palotay, D. and Mackenzie, P. (2018, April). SamSam Ransomware Chooses Its Targets Carefully. Retrieved April 15, 2019.Lorber, N. (2021, May 7). Revealing the Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023.USG. (2020, May 12). MAR-10288834-2.v1 – North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021.Antenucci, S., Pantazopoulos, N., Sandee, M. (2020, June 23). WastedLocker: A New Ransomware Variant Developed By The Evil Corp Group. Retrieved September 14, 2021.ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016.Schwarz, D., Sopko J. (2018, March 08). Donot Team Leverages New Modular Malware Framework in South Asia. Retrieved June 11, 2018.Huss, D., et al. (2017, February 2). Oops, they did it again: APT Targets Russia and Belarus with ZeroT and PlugX. Retrieved April 5, 2018.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.