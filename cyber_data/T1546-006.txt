MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseEvent Triggered ExecutionLC_LOAD_DYLIB AdditionEvent Triggered Execution:LC_LOAD_DYLIB AdditionOther sub-techniques of Event Triggered Execution (16)IDNameT1546.001Change Default File AssociationT1546.002ScreensaverT1546.003Windows Management Instrumentation Event SubscriptionT1546.004Unix Shell Configuration ModificationT1546.005TrapT1546.006LC_LOAD_DYLIB AdditionT1546.007Netsh Helper DLLT1546.008Accessibility FeaturesT1546.009AppCert DLLsT1546.010AppInit DLLsT1546.011Application ShimmingT1546.012Image File Execution Options InjectionT1546.013PowerShell ProfileT1546.014EmondT1546.015Component Object Model HijackingT1546.016Installer PackagesAdversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.[1]There are tools available to perform these changes.Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.[2]ID:T1546.006Sub-technique of:T1546ⓘTactics:Privilege Escalation,PersistenceⓘPlatforms:macOSⓘPermissions Required:UserVersion:1.0Created:24 January 2020Last Modified:20 April 2022Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1047AuditBinaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn't included as part of an update, it should be investigated.M1045Code SigningEnforce that all binaries be signed by the correct Apple Developer IDs.M1038Execution PreventionAllow applications via known hashes.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.DS0022FileFile MetadataChanges to binaries that do not line up with application updates or patches are also extremely suspicious.File ModificationMonitor file systems for changes to application binaries and invalid checksums/signatures.DS0011ModuleModule LoadMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.DS0009ProcessProcess CreationMonitor processes for those that may be used to modify binary headers.ReferencesPatrick Wardle. (2015). Writing Bad @$$ Malware for OS X. Retrieved July 10, 2017.Patrick Wardle. (2015). Malware Persistence on OS X Yosemite. Retrieved July 10, 2017.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.