MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseProcess InjectionProc MemoryProcess Injection:Proc MemoryOther sub-techniques of Process Injection (12)IDNameT1055.001Dynamic-link Library InjectionT1055.002Portable Executable InjectionT1055.003Thread Execution HijackingT1055.004Asynchronous Procedure CallT1055.005Thread Local StorageT1055.008Ptrace System CallsT1055.009Proc MemoryT1055.011Extra Window Memory InjectionT1055.012Process HollowingT1055.013Process DoppelgängingT1055.014VDSO HijackingT1055.015ListPlantingAdversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.Proc memory injection involves enumerating the memory of a process via the /proc filesystem (/proc/[pid]) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within/proc/[pid]/mapscan be overwritten using dd.[1][2][3]Other techniques such asDynamic Linker Hijackingmay be used to populate a target process with more available gadgets. Similar toProcess Hollowing, proc memory injection may target child processes (such as a backgrounded copy of sleep).[2]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process.ID:T1055.009Sub-technique of:T1055ⓘTactics:Defense Evasion,Privilege EscalationⓘPlatforms:LinuxⓘDefense Bypassed:Anti-virus, Application controlVersion:1.0Created:14 January 2020Last Modified:20 June 2020Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.M1022Restrict File and Directory PermissionsRestrict the permissions on sensitive files such as/proc/[pid]/mapsor/proc/[pid]/mem.DetectionIDData SourceData ComponentDetectsDS0022FileFile ModificationMonitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases.Referencesskape. (2003, January 19). Linux x86 run-time process manipulation. Retrieved December 20, 2017.McNamara, R. (2017, September 5). Linux Based Inter-Process Code Injection Without Ptrace(2). Retrieved February 21, 2020.Kerrisk, M. (2020, February 2). DD(1) User Commands. Retrieved February 21, 2020.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.