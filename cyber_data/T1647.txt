MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterprisePlist File ModificationPlist File ModificationAdversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as theinfo.plistfile, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.[1]Adversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e.Hidden Window) or running additional commands for persistence (ex:Launch Agent/Launch DaemonorRe-opened Applications).For example, adversaries can add a malicious application path to the~/Library/Preferences/com.apple.dock.plistfile, which controls apps that appear in the Dock. Adversaries can also modify theLSUIElementkey in an application’sinfo.plistfile  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such asLSEnvironment, to enable persistence viaDynamic Linker Hijacking.[2][3]ID:T1647Sub-techniques:No sub-techniquesⓘTactic:Defense EvasionⓘPlatforms:macOSVersion:1.0Created:09 April 2022Last Modified:20 April 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0658XCSSETXCSSETuses theplutilcommand to modify theLSUIElement,DFBundleDisplayName, andCFBundleIdentifierkeys in the/Contents/Info.plistfile to change howXCSSETis visible on the system.[4]MitigationsIDMitigationDescriptionM1013Application Developer GuidanceEnsure applications are using Apple's developer guidance which enables hardened runtime.[5]DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in\~/LaunchAgents,\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm, and an application'sInfo.plist.DS0022FileFile ModificationMonitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from\~/Library/Scriptsor\~/Library/Preferences. Also, monitor for significant changes to any path pointers in a modified plist.DS0009ProcessProcess CreationMonitor for newly executed processes with arguments that can modify property list (plist) files.ReferencesFileInfo.com team. (2019, November 26). .PLIST File Extension. Retrieved October 12, 2021.Patrick Wardle. (2022, January 1). The Art of Mac Malware Volume 0x1:Analysis. Retrieved April 19, 2022.ESET. (2012, January 1). OSX/Flashback. Retrieved April 19, 2022.Mac Threat Response, Mobile Research Team. (2020, August 13). The XCSSET Malware: Inserts Malicious Code Into Xcode Projects, Performs UXSS Backdoor Planting in Safari, and Leverages Two Zero-day Exploits. Retrieved October 5, 2021.Apple Inc.. (2021, January 1). Hardened Runtime: Manage security protections and resource access for your macOS apps.. Retrieved March 24, 2021.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.