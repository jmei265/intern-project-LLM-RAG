MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseCreate or Modify System ProcessLaunch AgentCreate or Modify System Process:Launch AgentOther sub-techniques of Create or Modify System Process (5)IDNameT1543.001Launch AgentT1543.002Systemd ServiceT1543.003Windows ServiceT1543.004Launch DaemonT1543.005Container ServiceAdversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in/System/Library/LaunchAgents,/Library/LaunchAgents, and~/Library/LaunchAgents.[1][2][3]Property list files use theLabel,ProgramArguments, andRunAtLoadkeys to identify the Launch Agent's name, executable location, and execution time.[4]Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.Launch Agents can also be executed using theLaunchctlcommand.Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with theRunAtLoadorKeepAlivekeys set totrue.[5][6]The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.[7][8]ID:T1543.001Sub-technique of:T1543ⓘTactics:Persistence,Privilege EscalationⓘPlatforms:macOSⓘPermissions Required:Administrator, UserContributors:Antonio Piazza, @antman1pVersion:1.4Created:17 January 2020Last Modified:21 April 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0482BundloreBundlorecan persist via a LaunchAgent.[9]S0274CalistoCalistoadds a .plist file to the /Library/LaunchAgents folder to maintain persistence.[10]S0369CoinTickerCoinTickercreates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.[11]S0492CookieMinerCookieMinerhas installed multiple new Launch Agents in order to maintain persistence for cryptocurrency mining software.[12]S0235CrossRATCrossRATcreates a Launch Agent on macOS.[13]S0497DaclsDaclscan establish persistence via a LaunchAgent.[14][15]S0281DokDokinstalls two LaunchAgents to redirect all network traffic with a randomly generated name for each plist file maintaining the formatcom.random.name.plist.[16][17]S0277FruitFlyFruitFlypersists via a Launch Agent.[16]S0690Green LambertGreen Lambertcan create aLaunch Agentwith theRunAtLoadkey-value pair set totrue, ensuring thecom.apple.GrowlHelper.plistfile runs every time a user logs in.[18][19]S0276KeydnapKeydnapuses a Launch Agent to persist.[20]S0162KomplexTheKomplextrojan creates a persistent launch agent called with$HOME/Library/LaunchAgents/com.apple.updates.plistwithlaunchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist.[5]S1016MacMaMacMainstalls acom.apple.softwareupdate.plistfile in the/LaunchAgentsfolder with theRunAtLoadvalue set totrue. Upon user login,MacMais executed from/var/root/.local/softwareupdatewith root privileges. Some variations also include theLimitLoadToSessionTypekey with the valueAqua, ensuring theMacMaonly runs when there is a logged in GUI user.[21][22]S1048macOS.OSAMinermacOS.OSAMinerhas placed aStripped Payloadswith aplistextension in theLaunch Agent's folder.[23]S0282MacSpyMacSpypersists via a Launch Agent.[16]S0198NETWIRENETWIREcan use launch agents for persistence.[24]S0352OSX_OCEANLOTUS.DOSX_OCEANLOTUS.Dcan create a persistence file in the folder/Library/LaunchAgents.[25][26]S0279ProtonProtonpersists via Launch Agent.[16]S0595ThiefQuestThiefQuestinstalls a launch item using an embedded encrypted launch agent property list template. The plist file is installed in the~/Library/LaunchAgents/folder and configured with the path to the persistent binary located in the~/Library/folder.[27]MitigationsIDMitigationDescriptionM1022Restrict File and Directory PermissionsSet group policies to restrict file permissions to the~/launchagentsfolder.[28]DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionEnsure Launch Agent'sProgramArgumentskey pointing to executables located in the/tmpor/sharedfolders are in alignment with enterprise policy. Ensure all Launch Agents with theRunAtLoadkey set totrueare in alignment with policy.DS0022FileFile CreationMonitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.File ModificationLaunch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.DS0019ServiceService CreationMonitor Launch Agent creation through additional plist files and utilities such as Objective-See’s KnockKnock application.Service ModificationMonitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence.ReferencesApple. (n.d.). Creating Launch Daemons and Agents. Retrieved July 10, 2017.Marc-Etienne M.Leveille. (2016, July 6). New OSX/Keydnap malware is hungry for credentials. Retrieved July 3, 2017.Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.Thomas Reed. (2017, July 7). New OSX.Dok malware intercepts web traffic. Retrieved July 10, 2017.Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.Patrick Wardle. (2014, September). Methods of Malware Persistence on Mac OS X. Retrieved July 5, 2017.Patrick Wardle. (2016, February 29). Let's Play Doctor: Practical OS X Malware Detection & Analysis. Retrieved July 10, 2017.Eddie Lee. (2016, February 17). OceanLotus for OS X - an Application Bundle Pretending to be an Adobe Flash Update. Retrieved July 5, 2017.Sushko, O. (2019, April 17). macOS Bundlore: Mac Virus Bypassing macOS Security Features. Retrieved June 30, 2020.Kuzin, M., Zelensky S. (2018, July 20). Calisto Trojan for macOS. Retrieved September 7, 2018.Thomas Reed. (2018, October 29). Mac cryptocurrency ticker app installs backdoors. Retrieved April 23, 2019.Chen, y., et al. (2019, January 31). Mac Malware Steals Cryptocurrency Exchanges’ Cookies. Retrieved July 22, 2020.Blaich, A., et al. (2018, January 18). Dark Caracal: Cyber-espionage at a Global Scale. Retrieved April 11, 2018.Stokes, P. (2020, July 27). Four Distinct Families of Lazarus Malware Target Apple’s macOS Platform. Retrieved August 7, 2020.Mabutas, G. (2020, May 11). New MacOS Dacls RAT Backdoor Shows Lazarus’ Multi-Platform Attack Capability. Retrieved August 10, 2020.Patrick Wardle. (n.d.). Mac Malware of 2017. Retrieved September 21, 2018.Ofer Caspi. (2017, May 4). OSX Malware is Catching Up, and it wants to Read Your HTTPS Traffic. Retrieved October 5, 2021.Sandvik, Runa. (2021, October 1). Made In America: Green Lambert for OS X. Retrieved March 21, 2022.Sandvik, Runa. (2021, October 18). Green Lambert and ATT&CK. Retrieved March 21, 2022.Patrick Wardle. (2017, January 1). Mac Malware of 2016. Retrieved September 21, 2018.M.Léveillé, M., Cherepanov, A.. (2022, January 25). Watering hole deploys new macOS malware, DazzleSpy, in Asia. Retrieved May 6, 2022.Wardle, P. (2021, November 11). OSX.CDDS (OSX.MacMa). Retrieved June 30, 2022.Phil Stokes. (2021, January 11). FADE DEAD | Adventures in Reversing Malicious Run-Only AppleScripts. Retrieved September 29, 2022.Lambert, T. (2020, January 29). Intro to Netwire. Retrieved January 7, 2021.Horejsi, J. (2018, April 04). New MacOS Backdoor Linked to OceanLotus Found. Retrieved November 13, 2018.Magisa, L. (2020, November 27). New MacOS Backdoor Connected to OceanLotus Surfaces. Retrieved December 2, 2020.Patrick Wardle. (2020, June 29). OSX.EvilQuest Uncovered part i: infection, persistence, and more!. Retrieved March 18, 2021.Antonio Piazza (4n7m4n). (2021, November 23). Defeating Malicious Launch Persistence. Retrieved April 19, 2022.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.