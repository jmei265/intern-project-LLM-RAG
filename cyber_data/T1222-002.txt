MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseFile and Directory Permissions ModificationLinux and Mac File and Directory Permissions ModificationFile and Directory Permissions Modification:Linux and Mac File and Directory Permissions ModificationOther sub-techniques of File and Directory Permissions Modification (2)IDNameT1222.001Windows File and Directory Permissions ModificationT1222.002Linux and Mac File and Directory Permissions ModificationAdversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs:chown(short for change owner), andchmod(short for change mode).Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence viaUnix Shell Configuration Modificationor tainting/hijacking other instrumental binary/configuration files viaHijack Execution Flow.[3]ID:T1222.002Sub-technique of:T1222ⓘTactic:Defense EvasionⓘPlatforms:Linux, macOSVersion:1.2Created:04 February 2020Last Modified:14 August 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionG0050APT32APT32's macOS backdoor changes the permission of the file it wants to execute to 755.[4]S1070Black BastaTheBlack Bastabinary can usechmodto gain full permissions to targeted files.[5]S0482BundloreBundlorechanges the permissions of a payload using the commandchmod -R 755.[3]S1105COATHANGERCOATHANGERwill set the GID ofhttpsdto 90 when infected.[6]S0281DokDokgives all users execute permissions for the application using the commandchmod +x /Users/Shared/AppStore.app.[7]S0599KinsingKinsinghas used chmod to modify permissions on key files for use.[8]S0402OSX/ShlayerOSX/Shlayercan use thechmodutility to set a file as executable, such aschmod 777orchmod +x.[3][9][10]S0352OSX_OCEANLOTUS.DOSX_OCEANLOTUS.Dhas changed permissions of a second-stage payload to an executable viachmod.[11]S0598P.A.S. WebshellP.A.S. Webshellhas the ability to modify file permissions.[12]S0587PenquinPenquincan add the executable flag to a downloaded file.[13]G0106RockeRockehas changed file permissions of files so they could not be modified.[14]G0139TeamTNTTeamTNThas modified the permissions on binaries withchattr.[15][16]S0658XCSSETXCSSETuses thechmod +xcommand to grant executable permissions to the malicious file.[3]MitigationsIDMitigationDescriptionM1026Privileged Account ManagementEnsure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.M1022Restrict File and Directory PermissionsApplying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMany of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments includechmod +x,chmod -R 755, andchmod 777.[3]DS0022FileFile MetadataMonitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.This looks for any invocations of chmod. Note that this is likely to be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 - Access Permission Modification for Linuxsource="linux:" CommandLine="chmod*"DS0009ProcessProcess CreationMonitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]ReferencesHybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.Dumont, R.. (2019, April 9). OceanLotus: macOS malware update. Retrieved April 15, 2019.Sharma, S. and Hegde, N. (2022, June 7). Black basta Ransomware Goes Cross-Platform, Now Targets ESXi Systems. Retrieved March 8, 2023.Dutch Military Intelligence and Security Service (MIVD) & Dutch General Intelligence and Security Service (AIVD). (2024, February 6). Ministry of Defense of the Netherlands uncovers COATHANGER, a stealthy Chinese FortiGate RAT. Retrieved February 7, 2024.Ofer Caspi. (2017, May 4). OSX Malware is Catching Up, and it wants to Read Your HTTPS Traffic. Retrieved October 5, 2021.Singer, G. (2020, April 3). Threat Alert: Kinsing Malware Attacks Targeting Container Environments. Retrieved April 1, 2021.Carbon Black Threat Analysis Unit. (2019, February 12). New macOS Malware Variant of Shlayer (OSX) Discovered. Retrieved August 8, 2019.Jaron Bradley. (2021, April 26). Shlayer malware abusing Gatekeeper bypass on macOS. Retrieved September 22, 2021.Phil Stokes. (2020, December 2). APT32 Multi-stage macOS Trojan Innovates on Crimeware Scripting Technique. Retrieved September 13, 2021.ANSSI. (2021, January 27). SANDWORM INTRUSION SET CAMPAIGN TARGETING CENTREON SYSTEMS. Retrieved March 30, 2021.Leonardo. (2020, May 29). MALWARE TECHNICAL INSIGHT TURLA “Penquin_x64”. Retrieved March 11, 2021.Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019.Fiser, D. Oliveira, A. (n.d.). Tracking the Activities of TeamTNT A Closer Look at a Cloud-Focused Malicious Actor Group. Retrieved September 22, 2021.Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved August 4, 2022.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.