MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseProcess InjectionListPlantingProcess Injection:ListPlantingOther sub-techniques of Process Injection (12)IDNameT1055.001Dynamic-link Library InjectionT1055.002Portable Executable InjectionT1055.003Thread Execution HijackingT1055.004Asynchronous Procedure CallT1055.005Thread Local StorageT1055.008Ptrace System CallsT1055.009Proc MemoryT1055.011Extra Window Memory InjectionT1055.012Process HollowingT1055.013Process DoppelgängingT1055.014VDSO HijackingT1055.015ListPlantingAdversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.List-view controls are user interface windows used to display collections of items.[1]Information about an application's list-view settings are stored within the process' memory in aSysListView32control.ListPlanting (a form of message-passing "shatter attack") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.[2]Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to theSysListView32child of the victim process window (via Windows API calls such asFindWindowand/orEnumWindows) or otherProcess Injectionmethods.Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitoredWriteProcessMemoryfunction. For example, an adversary can use thePostMessageand/orSendMessageAPI functions to sendLVM_SETITEMPOSITIONandLVM_GETITEMPOSITIONmessages, effectively copying a payload 2 bytes at a time to the allocated memory.[3]Finally, the payload is triggered by sending theLVM_SORTITEMSmessage to theSysListView32child of the process window, with the payload within the newly allocated buffer passed and executed as theListView_SortItemscallback.ID:T1055.015Sub-technique of:T1055ⓘTactics:Defense Evasion,Privilege EscalationⓘPlatforms:WindowsⓘPermissions Required:UserContributors:ESETVersion:1.0Created:22 November 2021Last Modified:08 March 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0260InvisiMoleInvisiMolehas used ListPlanting to inject code into a trusted process.[3]MitigationsIDMitigationDescriptionM1040Behavior Prevention on EndpointSome endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.DetectionIDData SourceData ComponentDetectsDS0009ProcessOS API ExecutionConsider monitoring for excessive use ofSendMessageand/orPostMessageAPI functions withLVM_SETITEMPOSITIONand/orLVM_GETITEMPOSITIONarguments.Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asFindWindow,FindWindowEx,EnumWindows,EnumChildWindows, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be abused for this technique.Process ModificationMonitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.ReferencesMicrosoft. (2021, May 25). About List-View Controls. Retrieved January 4, 2022.odzhan. (2019, April 25). Windows Process Injection: WordWarping, Hyphentension, AutoCourgette, Streamception, Oleum, ListPlanting, Treepoline. Retrieved November 15, 2021.Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.