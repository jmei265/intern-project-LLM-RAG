MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseMasqueradingBreak Process TreesMasquerading:Break Process TreesOther sub-techniques of Masquerading (9)IDNameT1036.001Invalid Code SignatureT1036.002Right-to-Left OverrideT1036.003Rename System UtilitiesT1036.004Masquerade Task or ServiceT1036.005Match Legitimate Name or LocationT1036.006Space after FilenameT1036.007Double File ExtensionT1036.008Masquerade File TypeT1036.009Break Process TreesAn adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the "parent-child" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.[1]On Linux systems, adversaries may execute a series ofNative APIcalls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call thefork()API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by theinitsystem process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.Another example is using the "daemon" syscall to detach from the current parent process and run in the background.[2][3]ID:T1036.009Sub-technique of:T1036ⓘTactic:Defense EvasionⓘPlatforms:Linux, macOSContributors:Tim (Wadhwa-)BrownVersion:1.0Created:27 September 2023Last Modified:03 October 2023Version PermalinkLive VersionMitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0009ProcessOS API ExecutionMonitor for API calls such asfork()which can be abused to masquerade or manipulate process metadata.Process CreationMonitor for the abnormal creation of background processes as well as processes executing from abnormal locations, such as/dev/shm.ReferencesJuan Tapiador. (2022, April 11). UNIX daemonization and the double fork. Retrieved September 29, 2023.The Sandfly Security Team. (2022, May 11). BPFDoor - An Evasive Linux Backdoor Technical Analysis. Retrieved September 29, 2023.Microsoft Threat Intelligence. (2022, May 19). Rise in XorDdos: A deeper look at the stealthy DDoS malware targeting Linux devices. Retrieved September 27, 2023.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.