MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseHide ArtifactsHidden File SystemHide Artifacts:Hidden File SystemOther sub-techniques of Hide Artifacts (12)IDNameT1564.001Hidden Files and DirectoriesT1564.002Hidden UsersT1564.003Hidden WindowT1564.004NTFS File AttributesT1564.005Hidden File SystemT1564.006Run Virtual InstanceT1564.007VBA StompingT1564.008Email Hiding RulesT1564.009Resource ForkingT1564.010Process Argument SpoofingT1564.011Ignore Process InterruptsT1564.012File/Path ExclusionsAdversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.[1]Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.[1][2]Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.[3]Adversaries may also fragment files across the existing file system structure in non-standard ways.[4]ID:T1564.005Sub-technique of:T1564ⓘTactic:Defense EvasionⓘPlatforms:Linux, Windows, macOSⓘPermissions Required:Administrator, UserVersion:1.0Created:28 June 2020Last Modified:29 June 2020Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0114BOOTRASHBOOTRASHhas used unallocated disk space between partitions for a hidden file system that stores components of the Nemesis bootkit.[2]S0126ComRATComRAThas used a portable FAT16 partition image placed in %TEMP% as a hidden file system.[3]G0020EquationEquationhas used an encrypted virtual file system stored in the Windows Registry.[4]S0019ReginReginhas used a hidden file system to store some of its components.[5]G0041StriderStriderhas used a hidden file system that is stored as a file on disk.[6]S0022UroburosUroburoscan use concealed storage mechanisms including an NTFS or FAT-16 filesystem encrypted with CAST-128 in CBC mode.[7]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0022FileFile ModificationDetecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.DS0001FirmwareFirmware ModificationMonitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools.BootkitDS0024Windows RegistryWindows Registry Key ModificationMonitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools.ReferencesHutchins, M. (2014, November 28). Virtual File Systems for Beginners. Retrieved June 22, 2020.Andonov, D., et al. (2015, December 7). Thriving Beyond The Operating System: Financial Threat Group Targets Volume Boot Record. Retrieved May 13, 2016.Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020.Kaspersky Lab's Global Research and Analysis Team. (2015, February). Equation Group: Questions and Answers. Retrieved December 21, 2015.Kaspersky Lab's Global Research and Analysis Team. (2014, November 24). THE REGIN PLATFORM NATION-STATE OWNAGE OF GSM NETWORKS. Retrieved December 1, 2014.Kaspersky Lab's Global Research & Analysis Team. (2016, August 9). The ProjectSauron APT. Retrieved August 17, 2016.FBI et al. (2023, May 9). Hunting Russian Intelligence “Snake” Malware. Retrieved June 8, 2023.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.