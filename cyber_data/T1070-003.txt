MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseIndicator RemovalClear Command HistoryIndicator Removal:Clear Command HistoryOther sub-techniques of Indicator Removal (9)IDNameT1070.001Clear Windows Event LogsT1070.002Clear Linux or Mac System LogsT1070.003Clear Command HistoryT1070.004File DeletionT1070.005Network Share Connection RemovalT1070.006TimestompT1070.007Clear Network Connection History and ConfigurationsT1070.008Clear Mailbox DataT1070.009Clear PersistenceIn addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variableHISTFILE. When a user logs off a system, this information is flushed to a file in the user's home directory called~/.bash_history. The benefit of this is that it allows users to go back to commands they've used before in different sessions.Adversaries may delete their commands from these logs by manually clearing the history (history -c) or deleting the bash history filerm ~/.bash_history.Adversaries may also leverage aNetwork Device CLIon network devices to clear command history data (clear loggingand/orclear history).[1]On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by thePSReadLinemodule. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.ThePSReadLinecommand history tracks the commands used in all PowerShell sessions and writes them to a file ($env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txtby default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.[2]Adversaries may run the PowerShell commandClear-Historyto flush the entire command history from a current PowerShell session. This, however, will not delete/flush theConsoleHost_history.txtfile. Adversaries may also delete theConsoleHost_history.txtfile or edit its contents to hide PowerShell commands they have run.[3][4]ID:T1070.003Sub-technique of:T1070ⓘTactic:Defense EvasionⓘPlatforms:Linux, Network, Windows, macOSⓘDefense Bypassed:Host forensic analysis, Log analysisContributors:Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, SophosVersion:1.5Created:31 January 2020Last Modified:14 February 2024Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionG0096APT41APT41attempted to remove evidence of some of its activity by deleting Bash histories.[5]G1023APT5APT5has cleared the command history on targeted ESXi servers.[6]S0601HildegardHildegardhas used history -c to clear script shell logs.[7]S0641KobalosKobaloscan remove all command history on compromised hosts.[8]G0032Lazarus GroupLazarus Grouphas routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility.[9]G0059Magic HoundMagic Houndhas removed mailbox export requests from compromised Exchange servers.[10]G0045menuPassmenuPasshas usedWevtutilto remove PowerShell execution logs.[11]G0139TeamTNTTeamTNThas cleared command history withhistory -c.[12][13]MitigationsIDMitigationDescriptionM1039Environment Variable PermissionsMaking the environment variables associated with command history read only may ensure that the history is preserved.[14]M1029Remote Data StorageForward logging of historical data to remote data store and centralized logging solution to preserve historical command line log data.M1022Restrict File and Directory PermissionsPreventing users from deleting or writing to certain files can stop adversaries from maliciously altering their~/.bash_historyorConsoleHost_history.txtfiles.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor executed commands and arguments for actions that could be taken to clear command history, such asClear-Historyon Windows orclear logging/clear historyvia a Network Device CLI in AAA logs, or to disable writing command history, such ashistory -cin bash/zsh .Analytic 1 - Powershell Commands(source="WinEventLog:Microsoft-Windows-Powershell/Operational" EventCode="4103") (CommandLine="Clear-History" OR   (CommandLine="Remove-Item" AND CommandLine="ConsoleHost_history.text*"))DS0022FileFile DeletionMonitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.Analytic 1 - Deletion of command history files(source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="23") OR (source="WinEventLog:Security" EventCode="4663") FilePath LIKE '%ConsoleHost_history.txt%' AND   ObjectType == "File" AND   (UserAccessList LIKE '%1537%' OR     UserAccessList LIKE '%DELETE%'))File ModificationMonitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.Analytic 1 : Modification of access rights to command history files(source="WinEventLog:Security" EventCode IN (4663, 4670) AND Path="ConsoleHost_history.txt" AND ObjectType="File")     AND (UserAccessList="1539" OR UserAccessList="WRITE_DAC") OR (ObjectNewSd=";FA" OR ObjectNewSd=";FW" OR ObjectNewSd=";BU*")DS0009ProcessProcess CreationMonitor for the suspicious execution of processes that may clear the command history of a compromised account to conceal the actions undertaken during an intrusion.Analytic 1 - Clear Powershell Console Command History(source="WinEventLog:Microsoft-Windows-Sysmon/Operational" EventCode="1") OR (source="WinEventLog:Security" EventCode="4688") AND  (CommandLine="rm (Get-PSReadlineOption).HistorySavePath" OR   CommandLine="del (Get-PSReadlineOption).HistorySavePath" OR    CommandLine="Set-PSReadlineOption –HistorySaveStyle SaveNothing" OR   CommandLine="Remove-Item (Get-PSReadlineOption).HistorySavePath" OR   (CommandLine="del" AND CommandLine="Microsoft\Windows\Powershell\PSReadline\ConsoleHost_history.txt"))DS0002User AccountUser Account AuthenticationMonitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.ReferencesUS-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.Microsoft. (2020, May 13). About History. Retrieved September 4, 2020.jak. (2020, June 27). Live Discover - PowerShell command audit. Retrieved August 21, 2020.Vikas, S. (2020, August 26). PowerShell Command History Forensics. Retrieved September 4, 2020.Fraser, N., et al. (2019, August 7). Double DragonAPT41, a dual espionage and cyber crime operation APT41. Retrieved September 23, 2019.Perez, D. et al. (2021, May 27). Re-Checking Your Pulse: Updates on Chinese APT Actors Compromising Pulse Secure VPN Devices. Retrieved February 5, 2024.Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021.M.Leveille, M., Sanmillan, I. (2021, February 2). Kobalos – A complex Linux threat to high performance computing infrastructure. Retrieved August 24, 2021.Vyacheslav Kopeytsev and Seongsu Park. (2021, February 25). Lazarus targets defense industry with ThreatNeedle. Retrieved October 27, 2021.DFIR Report. (2022, March 21). APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022.GREAT. (2021, March 30). APT10: sophisticated multi-layered loader Ecipekac discovered in A41APT campaign. Retrieved June 17, 2021.Fiser, D. Oliveira, A. (n.d.). Tracking the Activities of TeamTNT A Closer Look at a Cloud-Focused Malicious Actor Group. Retrieved September 22, 2021.Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved August 4, 2022.Mathew Branwell. (2012, March 21). Securing .bash_history file. Retrieved July 8, 2017.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.