MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesMobileSteal Application Access TokenURI HijackingSteal Application Access Token:URI HijackingAdversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If an adversary were to register for a URI that was already in use by a genuine application, the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the adversary to gain access to protected resources.[1][2]ID:T1635.001Sub-technique of:T1635Tactic Type:Post-Adversary Device AccessⓘTactic:Credential AccessⓘPlatforms:Android, iOSContributors:Leo Zhang, Trend Micro; Steven Du, Trend MicroVersion:1.1Created:01 April 2022Last Modified:20 March 2023Version PermalinkLive VersionMitigationsIDMitigationDescriptionM1013Application Developer GuidanceDevelopers should use Android App Links[3]and iOS Universal Links[4]to provide a secure binding between URIs and applications, preventing malicious applications from intercepting redirections. Additionally, for OAuth use cases, PKCE[2]should be used to prevent use of stolen authorization codes.M1006Use Recent OS VersioniOS 11 introduced a first-come-first-served principle for URIs, allowing only the prior installed app to be launched via the URI.[1]Android 6 introduced App Links.M1011User GuidanceUsers should be instructed to not open links in applications they don’t recognize.DetectionIDData SourceData ComponentDetectsDS0041Application VettingAPI CallsWhen vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice.[5][6]DS0042User InterfaceSystem NotificationsOn Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it.ReferencesL. Wu, Y. Zhou, M. Li. (2019, July 12).  iOS URL Scheme Susceptible to Hijacking. Retrieved September 11, 2020.N. Sakimura, J. Bradley, and N. Agarwal. (2015, September). IETF RFC 7636: Proof Key for Code Exchange by OAuth Public Clients. Retrieved December 21, 2016.Google. (n.d.). Verify Android App Links. Retrieved September 11, 2020.Apple. (n.d.). Universal Links for Developers. Retrieved September 11, 2020.W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018.Android. (n.d.). Handling App Links. Retrieved December 21, 2016.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.