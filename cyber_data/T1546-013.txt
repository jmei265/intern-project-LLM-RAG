MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseEvent Triggered ExecutionPowerShell ProfileEvent Triggered Execution:PowerShell ProfileOther sub-techniques of Event Triggered Execution (16)IDNameT1546.001Change Default File AssociationT1546.002ScreensaverT1546.003Windows Management Instrumentation Event SubscriptionT1546.004Unix Shell Configuration ModificationT1546.005TrapT1546.006LC_LOAD_DYLIB AdditionT1546.007Netsh Helper DLLT1546.008Accessibility FeaturesT1546.009AppCert DLLsT1546.010AppInit DLLsT1546.011Application ShimmingT1546.012Image File Execution Options InjectionT1546.013PowerShell ProfileT1546.014EmondT1546.015Component Object Model HijackingT1546.016Installer PackagesAdversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (profile.ps1) is a script that runs whenPowerShellstarts and can be used as a logon script to customize user environments.PowerShellsupports several profiles depending on the user or host program. For example, there can be different profiles forPowerShellhost programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.[1]Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/orPowerShelldrives to gain persistence. Every time a user opens aPowerShellsession the modified script will be executed unless the-NoProfileflag is used when it is launched.[2]An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator.[3]ID:T1546.013Sub-technique of:T1546ⓘTactics:Privilege Escalation,PersistenceⓘPlatforms:WindowsⓘPermissions Required:Administrator, UserContributors:Allen DeRyke, ICE; Matt Green, @mgreen27Version:1.1Created:24 January 2020Last Modified:20 October 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionG0010TurlaTurlahas used PowerShell profiles to maintain persistence on an infected machine.[2]MitigationsIDMitigationDescriptionM1045Code SigningEnforce execution of only signed PowerShell scripts. Sign profiles to avoid them from being modified.M1022Restrict File and Directory PermissionsMaking PowerShell profiles immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.M1054Software ConfigurationAvoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.DetectionIDData SourceData ComponentDetectsDS0017CommandCommand ExecutionMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.DS0022FileFile CreationLocations whereprofile.ps1can be stored should be monitored for new profiles.[4]Example profile locations include:*$PsHome\Profile.ps1*$PsHome\Microsoft.{HostProgram}_profile.ps1*$Home\My Documents\PowerShell\Profile.ps1*$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1File ModificationLocations whereprofile.ps1can be stored should be monitored for modifications.[4]Example profile locations include:*$PsHome\Profile.ps1*$PsHome\Microsoft.{HostProgram}_profile.ps1*$Home\My Documents\PowerShell\Profile.ps1*$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1DS0009ProcessProcess CreationMonitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.ReferencesMicrosoft. (2017, November 29). About Profiles. Retrieved June 14, 2019.Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019.DeRyke, A.. (2019, June 7). Lab Notes: Persistence and Privilege Elevation using the Powershell Profile. Retrieved July 8, 2019.Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.