MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseFile and Directory Permissions ModificationWindows File and Directory Permissions ModificationFile and Directory Permissions Modification:Windows File and Directory Permissions ModificationOther sub-techniques of File and Directory Permissions Modification (2)IDNameT1222.001Windows File and Directory Permissions ModificationT1222.002Linux and Mac File and Directory Permissions ModificationAdversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).[3]Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.[4]Adversaries can interact with the DACLs using built-in Windows commands, such asicacls,cacls,takeown, andattrib, which can grant adversaries higher permissions on specific files and folders. Further,PowerShellprovides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence viaAccessibility Features,Boot or Logon Initialization Scripts, or tainting/hijacking other instrumental binary/configuration files viaHijack Execution Flow.ID:T1222.001Sub-technique of:T1222ⓘTactic:Defense EvasionⓘPlatforms:WindowsVersion:1.2Created:04 February 2020Last Modified:21 April 2023Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0570BitPaymerBitPaymercan useicacls /resetandtakeown /Fto reset a targeted executable's permissions and then take ownership.[5]S1068BlackCatBlackCatcan use Windows commands such asfsutil behavior set SymLinkEvaluation R2L:1to redirect file system access to a different location after gaining access into compromised networks.[6]S0693CaddyWiperCaddyWipercan modify ACL entries to take ownership of files.[7]S0531GrandoreiroGrandoreirocan modify the binary ACL to prevent security tools from running.[8]S0201JPINJPINcan use the command-line utility cacls.exe to change file permissions.[9]S0446RyukRyukcan launchicacls/grant Everyone:F /T /C /Qto delete every access-based restrictions on files and directories.[10]S0366WannaCryWannaCryusesattrib +handicacls . /grant Everyone:F /T /C /Qto make some of its files hidden and grant all users full access controls.[11]S0612WastedLockerWastedLockerhas a command to take ownership of a file and reset the ACL permissions using thetakeown.exe /F filepathcommand.[12]G0102Wizard SpiderWizard Spiderhas used the icacls command to modify access control to backup servers, providing them with full control of all the system folders.[13]MitigationsIDMitigationDescriptionM1026Privileged Account ManagementEnsure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.M1022Restrict File and Directory PermissionsApplying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.DetectionIDData SourceData ComponentDetectsDS0026Active DirectoryActive Directory Object ModificationMonitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.DS0017CommandCommand ExecutionMonitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.DS0022FileFile MetadataConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID "NT AUTHORITY\SYSTEM") and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Analytic 1 - Access Permission Modification for Windows(source="*WinEventLog:Security" EventCode IN (4670, 4719)) Object_Type="File" Security_ID!="NT AUTHORITY\SYSTEM"DS0009ProcessProcess CreationMonitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.ReferencesHybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018.Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018.Microsoft. (2018, May 30). DACLs and ACEs. Retrieved August 19, 2018.M. Satran, M. Jacobs. (2018, May 30). Access Control Lists. Retrieved February 4, 2020.Frankoff, S., Hartley, B. (2018, November 14). Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer Targeted Ransomware. Retrieved January 6, 2021.Microsoft Defender Threat Intelligence. (2022, June 13). The many lives of BlackCat ransomware. Retrieved December 20, 2022.Malhotra, A. (2022, March 15). Threat Advisory: CaddyWiper. Retrieved March 23, 2022.ESET. (2020, April 28). Grandoreiro: How engorged can an EXE get?. Retrieved November 13, 2020.Windows Defender Advanced Threat Hunting Team. (2016, April 29). PLATINUM: Targeted attacks in South and Southeast Asia. Retrieved February 15, 2018.ANSSI. (2021, February 25). RYUK RANSOMWARE. Retrieved March 29, 2021.Noerenberg, E., Costis, A., and Quist, N. (2017, May 16). A Technical Analysis of WannaCry Ransomware. Retrieved March 25, 2019.Antenucci, S., Pantazopoulos, N., Sandee, M. (2020, June 23). WastedLocker: A New Ransomware Variant Developed By The Evil Corp Group. Retrieved September 14, 2021.Sean Gallagher, Peter Mackenzie, Elida Leite, Syed Shahram, Bill Kearney, Anand Aijan, Sivagnanam Gn, Suraj Mundalik. (2020, October 14). They’re back: inside a new Ryuk ransomware attack. Retrieved October 14, 2020.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.