MatricesEnterpriseMobileICSTacticsEnterpriseMobileICSTechniquesEnterpriseMobileICSDefensesData SourcesMitigationsEnterpriseMobileICSAssetsCTIGroupsSoftwareCampaignsResourcesGet StartedLearn More about ATT&CKATT&CKconATT&CK Data & ToolsFAQEngage with ATT&CKVersion HistoryLegal & BrandingBenefactorsBlogSearchATT&CKcon 5.0 returns October 22-23, 2024 in McLean, VA.Register heretoday!HomeTechniquesEnterpriseAccess Token ManipulationParent PID SpoofingAccess Token Manipulation:Parent PID SpoofingOther sub-techniques of Access Token Manipulation (5)IDNameT1134.001Token Impersonation/TheftT1134.002Create Process with TokenT1134.003Make and Impersonate TokenT1134.004Parent PID SpoofingT1134.005SID-History InjectionAdversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via theCreateProcessAPI call, which supports a parameter that defines the PPID to use.[1]This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically viasvchost.exeorconsent.exe) rather than the current user context.[2]Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID ofPowerShell/Rundll32to beexplorer.exerather than an Office document delivered as part ofSpearphishing Attachment.[3]This spoofing could be executed viaVisual Basicwithin a malicious Office document or any code that can performNative API.[4][3]Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such aslsass.exe), causing the new process to be elevated via the inherited access token.[5]ID:T1134.004Sub-technique of:T1134ⓘTactics:Defense Evasion,Privilege EscalationⓘPlatforms:WindowsⓘPermissions Required:Administrator, UserⓘDefense Bypassed:Heuristic Detection, Host Forensic AnalysisContributors:Wayne Silva, F-Secure CounterceptVersion:1.0Created:18 February 2020Last Modified:03 May 2022Version PermalinkLive VersionProcedure ExamplesIDNameDescriptionS0154Cobalt StrikeCobalt Strikecan spawn processes with alternate PPIDs.[6][7]S1111DarkGateDarkGaterelies on parent PID spoofing as part of its "rootkit-like" functionality to evade detection via Task Manager or Process Explorer.[8]S0356KONNIKONNIhas used parent PID spoofing to spawn a newcmdprocess usingCreateProcessWand a handle toTaskmgr.exe.[9]S0501PipeMonPipeMoncan use parent PID spoofing to elevate privileges.[10]MitigationsThis type of attack technique cannot be easily mitigated with preventive controls since
                                    it is based on the abuse of system features.DetectionIDData SourceData ComponentDetectsDS0009ProcessOS API ExecutionMonitor for API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information[11]). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.[12]This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.Process CreationMonitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exeProcess MetadataLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.[3]ReferencesStevens, D. (2009, November 22). Quickpost: SelectMyParent or Playing With the Windows Process Tree. Retrieved June 3, 2019.Montemayor, D. et al.. (2018, November 15). How User Account Control works. Retrieved June 3, 2019.Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019.Tafani-Dereeper, C. (2019, March 12). Building an Office macro to spoof parent processes and command line arguments. Retrieved June 3, 2019.Chester, A. (2017, November 20). Alternative methods of becoming SYSTEM. Retrieved June 4, 2019.Mudge, R. (2017, May 23). Cobalt Strike 3.8 – Who’s Your Daddy?. Retrieved June 4, 2019.Strategic Cyber LLC. (2020, November 5). Cobalt Strike: Advanced Threat Tactics for Penetration Testers. Retrieved April 13, 2021.Ernesto Fernández Provecho, Pham Duy Phuc, Ciana Driscoll & Vinoo Thomas. (2023, November 21). The Continued Evolution of the DarkGate Malware-as-a-Service. Retrieved February 9, 2024.Threat Intelligence Team. (2021, August 23). New variant of Konni malware used in campaign targetting Russia. Retrieved January 5, 2022.Tartare, M. et al. (2020, May 21). No “Game over” for the Winnti Group. Retrieved August 24, 2020.Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019.Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019.×load more resultsContact UsTerms of UsePrivacy PolicyWebsite Changelog© 2015 - 2024, The MITRE Corporation. MITRE ATT&CK and ATT&CK are registered trademarks of The MITRE Corporation.